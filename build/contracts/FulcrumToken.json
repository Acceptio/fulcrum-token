{
  "contractName": "FulcrumToken",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_destinations",
          "type": "address[]"
        },
        {
          "name": "_amounts",
          "type": "uint256[]"
        }
      ],
      "name": "bulkTransfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "removeAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "releaseTokenForTransfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "icoEndDate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "INITIAL_SUPPLY",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MAX_SUPPLY",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "targetReached",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "admins",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "addAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "disableTokenTransfers",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ALLOCATION_FOR_ADVISORS",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ALLOCATION_FOR_RESERVE",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ALLOCATION_FOR_COMMUNITY_REWARDS",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ALLOCATION_FOR_STRATEGIC_PARTNERSHIPS",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "released",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_accounts",
          "type": "address[]"
        }
      ],
      "name": "addManyAdmins",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ALLOCATION_FOR_INITIAL_STRATEGIC_PARTNERSHIPS",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ALLOCATION_FOR_TEAM",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_accounts",
          "type": "address[]"
        }
      ],
      "name": "removeManyAdmins",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_date",
          "type": "uint256"
        }
      ],
      "name": "ICOEndDateSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "TargetReached",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_destinations",
          "type": "address[]"
        },
        {
          "indexed": false,
          "name": "_amounts",
          "type": "uint256[]"
        }
      ],
      "name": "BulkTransferPerformed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_state",
          "type": "bool"
        }
      ],
      "name": "TokenReleased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "burner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "AdminAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "AdminRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "setSuccess",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_date",
          "type": "uint256"
        }
      ],
      "name": "setICOEndDate",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "mintCommunityRewardTokens",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "mintReserveTokens",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "mintTokensForTeam",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "mintTokensForAdvisors",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "mintTokensForInitialStrategicPartnerships",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "mintTokensForStrategicPartnerships",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040526000600560006101000a81548160ff0219169083151502179055506000600560016101000a81548160ff0219169083151502179055506000600760006101000a81548160ff02191690831515021790555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000be3369d3c21bcecceda1000000606402620000c4640100000000026401000000009004565b620003dd565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156200016a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f496e76616c696420616464726573732e0000000000000000000000000000000081525060200191505060405180910390fd5b69d3c21bcecceda100000060c8026200019d82600154620003c0640100000000026200561b179091906401000000009004565b111515156200023a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603b8152602001807f536f727279206275742074686520746f74616c20737570706c792063616e277481526020017f2065786365656420746865206d6178696d756d20737570706c792e000000000081525060400191505060405180910390fd5b6200029b816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054620003c0640100000000026200561b179091906401000000009004565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506200030281600154620003c0640100000000026200561b179091906401000000009004565b6001819055508173ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885826040518082815260200191505060405180910390a28173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60008183019050828110151515620003d457fe5b80905092915050565b61582f80620003ed6000396000f300608060405260043610610230576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde0314610235578063095ea7b3146102c55780630c69cc801461032a578063153a1f3e146103595780631785f53c1461041a57806318160ddd1461045d57806323b872dd1461048857806324d7806c1461050d57806328e665ef146105685780632a62738b146105975780632ff2e9dc146105c2578063313ce567146105ed57806332cb6b0c1461061e5780633bde5ba8146106495780633cd584d6146106785780633f4ba83a146106a757806342966c68146106be578063429b62e5146106eb57806343e91384146107465780635c975abb1461078b57806366188463146107ba578063704802751461081f57806370a0823114610862578063715018a6146108b9578063728b4293146108d057806372c174db146108ff57806377f9db331461092e5780637bfea0901461095d5780637f0aab321461098c5780638456cb59146109b757806388304abb146109ce5780638da5cb5b146109f957806391222f5414610a505780639154b07e14610a7b57806395d89b4114610aa65780639613252114610b3657806398e5026914610b65578063a8e6e77b14610b94578063a9059cbb14610bcf578063b348904a14610c34578063beff0b9514610c5f578063d73dd62314610c8a578063dd62ed3e14610cef578063e6575fb314610d66578063f1bca30f14610d95578063f2fde38b14610dd0575b600080fd5b34801561024157600080fd5b5061024a610e13565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561028a57808201518184015260208101905061026f565b50505050905090810190601f1680156102b75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102d157600080fd5b50610310600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e4c565b604051808215151515815260200191505060405180910390f35b34801561033657600080fd5b5061033f610fd8565b604051808215151515815260200191505060405180910390f35b34801561036557600080fd5b506104006004803603810190808035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919291929080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290505050611179565b604051808215151515815260200191505060405180910390f35b34801561042657600080fd5b5061045b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061147c565b005b34801561046957600080fd5b50610472611835565b6040518082815260200191505060405180910390f35b34801561049457600080fd5b506104f3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061183f565b604051808215151515815260200191505060405180910390f35b34801561051957600080fd5b5061054e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506119cd565b604051808215151515815260200191505060405180910390f35b34801561057457600080fd5b5061057d611a83565b604051808215151515815260200191505060405180910390f35b3480156105a357600080fd5b506105ac611cc4565b6040518082815260200191505060405180910390f35b3480156105ce57600080fd5b506105d7611cca565b6040518082815260200191505060405180910390f35b3480156105f957600080fd5b50610602611cdb565b604051808260ff1660ff16815260200191505060405180910390f35b34801561062a57600080fd5b50610633611ce0565b6040518082815260200191505060405180910390f35b34801561065557600080fd5b5061065e611cf1565b604051808215151515815260200191505060405180910390f35b34801561068457600080fd5b5061068d611d04565b604051808215151515815260200191505060405180910390f35b3480156106b357600080fd5b506106bc611ea5565b005b3480156106ca57600080fd5b506106e960048036038101908080359060200190929190505050612015565b005b3480156106f757600080fd5b5061072c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506120cc565b604051808215151515815260200191505060405180910390f35b34801561075257600080fd5b50610771600480360381019080803590602001909291905050506120ec565b604051808215151515815260200191505060405180910390f35b34801561079757600080fd5b506107a06122ef565b604051808215151515815260200191505060405180910390f35b3480156107c657600080fd5b50610805600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612302565b604051808215151515815260200191505060405180910390f35b34801561082b57600080fd5b50610860600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061248e565b005b34801561086e57600080fd5b506108a3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612848565b6040518082815260200191505060405180910390f35b3480156108c557600080fd5b506108ce612890565b005b3480156108dc57600080fd5b506108e5612995565b604051808215151515815260200191505060405180910390f35b34801561090b57600080fd5b50610914612ae3565b604051808215151515815260200191505060405180910390f35b34801561093a57600080fd5b50610943612dca565b604051808215151515815260200191505060405180910390f35b34801561096957600080fd5b5061097261300a565b604051808215151515815260200191505060405180910390f35b34801561099857600080fd5b506109a16132f1565b6040518082815260200191505060405180910390f35b3480156109c357600080fd5b506109cc613302565b005b3480156109da57600080fd5b506109e3613473565b6040518082815260200191505060405180910390f35b348015610a0557600080fd5b50610a0e613484565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610a5c57600080fd5b50610a656134aa565b6040518082815260200191505060405180910390f35b348015610a8757600080fd5b50610a906134bb565b6040518082815260200191505060405180910390f35b348015610ab257600080fd5b50610abb6134cc565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610afb578082015181840152602081019050610ae0565b50505050905090810190601f168015610b285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610b4257600080fd5b50610b4b613505565b604051808215151515815260200191505060405180910390f35b348015610b7157600080fd5b50610b7a613518565b604051808215151515815260200191505060405180910390f35b348015610ba057600080fd5b50610bcd6004803603810190808035906020019082018035906020019190919293919293905050506137ff565b005b348015610bdb57600080fd5b50610c1a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050613a84565b604051808215151515815260200191505060405180910390f35b348015610c4057600080fd5b50610c49613c10565b6040518082815260200191505060405180910390f35b348015610c6b57600080fd5b50610c74613c21565b6040518082815260200191505060405180910390f35b348015610c9657600080fd5b50610cd5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050613c32565b604051808215151515815260200191505060405180910390f35b348015610cfb57600080fd5b50610d50600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613dbe565b6040518082815260200191505060405180910390f35b348015610d7257600080fd5b50610d7b613e45565b604051808215151515815260200191505060405180910390f35b348015610da157600080fd5b50610dce60048036038101908080359060200190820180359060200191909192939192939050505061412c565b005b348015610ddc57600080fd5b50610e11600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506143b0565b005b6040805190810160405280600d81526020017f46756c6372756d20546f6b656e0000000000000000000000000000000000000081525081565b600033600560009054906101000a900460ff1680610e775750600560019054906101000a900460ff16155b15610f2057610e85816119cd565b1515610f1f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001807f4f7065726174696f6e206e6f7420616c6c6f7765642e20546865207472616e7381526020017f66657220737461746520697320726573747269637465642e000000000000000081525060400191505060405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614151515610fc5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f496e76616c696420616464726573732e0000000000000000000000000000000081525060200191505060405180910390fd5b610fcf8484614418565b91505092915050565b6000610fe3336119cd565b1515611057576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4163636573732069732064656e6965642e00000000000000000000000000000081525060200191505060405180910390fd5b600760009054906101000a900460ff161515611127576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604e8152602001807f536f7272792c20796f752063616e2774206d696e74206174207468697320746981526020017f6d6520626563617573652074686520746172676574206861736e27742062656581526020017f6e2072656163686564207965742e00000000000000000000000000000000000081525060600191505060405180910390fd5b6111746040805190810160405280601081526020017f636f6d6d756e69747952657761726473000000000000000000000000000000008152503369d3c21bcecceda1000000600f0261450a565b905090565b6000806000611187336119cd565b15156111fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4163636573732069732064656e6965642e00000000000000000000000000000081525060200191505060405180910390fd5b83518551141515611274576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f496e76616c6964206f7065726174696f6e2e000000000000000000000000000081525060200191505060405180910390fd5b61127d846146ae565b9150816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015151561135b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603e8152602001807f596f7520646f6e277420686176652073756666696369656e742066756e64732081526020017f746f207472616e7366657220616d6f756e742074686174206c617267652e000081525060400191505060405180910390fd5b600090505b84518110156113af576113a1858281518110151561137a57fe5b90602001906020020151858381518110151561139257fe5b90602001906020020151613a84565b508080600101915050611360565b7f9c1a54ca5f41a3eaa7ccf54ca1d1b659718f8da05cb67ddefe376ddbe38511bd8585604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b838110156114195780820151818401526020810190506113fe565b50505050905001838103825284818151815260200191508051906020019060200280838360005b8381101561145b578082015181840152602081019050611440565b5050505090500194505050505060405180910390a160019250505092915050565b611485336119cd565b15156114f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4163636573732069732064656e6965642e00000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561159e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f496e76616c696420616464726573732e0000000000000000000000000000000081525060200191505060405180910390fd5b600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515611685576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001807f5468697320616464726573732069736e277420616e2061646d696e697374726181526020017f746f722e0000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611797576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260478152602001807f546865206f776e65722063616e6e6f74206265206164646564206f722072656d81526020017f6f76656420746f206f722066726f6d207468652061646d696e6973747261746f81526020017f72206c6973742e0000000000000000000000000000000000000000000000000081525060600191505060405180910390fd5b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fa3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f60405160405180910390a250565b6000600154905090565b600083600560009054906101000a900460ff168061186a5750600560019054906101000a900460ff16155b1561191357611878816119cd565b1515611912576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001807f4f7065726174696f6e206e6f7420616c6c6f7765642e20546865207472616e7381526020017f66657220737461746520697320726573747269637465642e000000000000000081525060400191505060405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141515156119b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f496e76616c696420616464726573732e0000000000000000000000000000000081525060200191505060405180910390fd5b6119c3858585614707565b9150509392505050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611a2e5760019050611a7e565b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1690505b919050565b6000611a8e336119cd565b1515611b02576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4163636573732069732064656e6965642e00000000000000000000000000000081525060200191505060405180910390fd5b600560009054906101000a900460ff16151515611bad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001807f536f727279206275742074686520636f6e74726163742069736e27742070617581526020017f7365642e0000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600560019054906101000a900460ff16151515611c58576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603c8152602001807f496e76616c6964206f7065726174696f6e2e20546865207472616e736665722081526020017f7374617465206973206e6f206d6f726520726573747269637465642e0000000081525060400191505060405180910390fd5b6001600560016101000a81548160ff0219169083151502179055507fcbdf0fab2b7a1540009af97a79f3ea7944943c175155b588639cec284eebc804600560019054906101000a900460ff16604051808215151515815260200191505060405180910390a16001905090565b60065481565b69d3c21bcecceda100000060640281565b601281565b69d3c21bcecceda100000060c80281565b600760009054906101000a900460ff1681565b6000611d0f336119cd565b1515611d83576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4163636573732069732064656e6965642e00000000000000000000000000000081525060200191505060405180910390fd5b600760009054906101000a900460ff161515611e53576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604e8152602001807f536f7272792c20796f752063616e2774206d696e74206174207468697320746981526020017f6d6520626563617573652074686520746172676574206861736e27742062656581526020017f6e2072656163686564207965742e00000000000000000000000000000000000081525060600191505060405180910390fd5b611ea06040805190810160405280601881526020017f696e697469616c537472617465676963506172746e65727300000000000000008152503369d3c21bcecceda1000000600a0261450a565b905090565b611eae336119cd565b1515611f22576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4163636573732069732064656e6965642e00000000000000000000000000000081525060200191505060405180910390fd5b600560009054906101000a900460ff161515611fcc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f536f727279206275742074686520636f6e74726163742069732070617573656481526020017f2e0000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6000600560006101000a81548160ff0219169083151502179055507fa45f47fdea8a1efdd9029a5691c7f759c32b7c698632b563573e155625d1693360405160405180910390a1565b600560009054906101000a900460ff161515156120c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001807f536f727279206275742074686520636f6e74726163742069736e27742070617581526020017f7365642e0000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6120c981614ac2565b50565b60046020528060005260406000206000915054906101000a900460ff1681565b60006120f7336119cd565b151561216b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4163636573732069732064656e6965642e00000000000000000000000000000081525060200191505060405180910390fd5b600060065414151561220b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f5468652049434f20656e6420646174652077617320616c72656164792073657481526020017f2e0000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b42821115156122a8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001807f5468652049434f20656e642064617465206d75737420626520696e207468652081526020017f6675747572652e0000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b816006819055507f8af2dc49ef865a055c56e19964fd4e43183a7143e12813a8246daef30a2b6e0f826040518082815260200191505060405180910390a160019050919050565b600560009054906101000a900460ff1681565b600033600560009054906101000a900460ff168061232d5750600560019054906101000a900460ff16155b156123d65761233b816119cd565b15156123d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001807f4f7065726174696f6e206e6f7420616c6c6f7765642e20546865207472616e7381526020017f66657220737461746520697320726573747269637465642e000000000000000081525060400191505060405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415151561247b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f496e76616c696420616464726573732e0000000000000000000000000000000081525060200191505060405180910390fd5b6124858484614acf565b91505092915050565b612497336119cd565b151561250b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4163636573732069732064656e6965642e00000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156125b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f496e76616c696420616464726573732e0000000000000000000000000000000081525060200191505060405180910390fd5b600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151515612698576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001807f54686973206164647265737320697320616c726561647920616e2061646d696e81526020017f6973747261746f722e000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156127aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260478152602001807f546865206f776e65722063616e6e6f74206265206164646564206f722072656d81526020017f6f76656420746f206f722066726f6d207468652061646d696e6973747261746f81526020017f72206c6973742e0000000000000000000000000000000000000000000000000081525060600191505060405180910390fd5b6001600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e33960405160405180910390a250565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156128ec57600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a26000600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60006129a0336119cd565b1515612a14576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4163636573732069732064656e6965642e00000000000000000000000000000081525060200191505060405180910390fd5b600760009054906101000a900460ff16151515612a99576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4163636573732069732064656e6965642e00000000000000000000000000000081525060200191505060405180910390fd5b6001600760006101000a81548160ff0219169083151502179055507f8735407ca1ae8b74dd5770f504b2e8150f9a70d8eebb2ead3961051c814bda6c60405160405180910390a190565b6000612aee336119cd565b1515612b62576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4163636573732069732064656e6965642e00000000000000000000000000000081525060200191505060405180910390fd5b600760009054906101000a900460ff161515612c32576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604e8152602001807f536f7272792c20796f752063616e2774206d696e74206174207468697320746981526020017f6d6520626563617573652074686520746172676574206861736e27742062656581526020017f6e2072656163686564207965742e00000000000000000000000000000000000081525060600191505060405180910390fd5b600060065414151515612cd3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603f8152602001807f596f75206e65656420746f2073706563696679207468652049434f20656e642081526020017f64617465206265666f7265206d696e74696e672074686520746f6b656e732e0081525060400191505060405180910390fd5b6301e133806006540142111515612d78576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260398152602001807f4163636573732069732064656e6965642c206974277320746f6f206561726c7981526020017f20746f206d696e742061647669736f727920746f6b656e732e0000000000000081525060400191505060405180910390fd5b612dc56040805190810160405280600881526020017f61647669736f72730000000000000000000000000000000000000000000000008152503369d3c21bcecceda100000060080261450a565b905090565b6000612dd5336119cd565b1515612e49576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4163636573732069732064656e6965642e00000000000000000000000000000081525060200191505060405180910390fd5b600560009054906101000a900460ff16151515612ef4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001807f536f727279206275742074686520636f6e74726163742069736e27742070617581526020017f7365642e0000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600560019054906101000a900460ff161515612f9e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603c8152602001807f496e76616c6964206f7065726174696f6e2e20546865207472616e736665722081526020017f737461746520697320616c726561647920726573747269637465642e0000000081525060400191505060405180910390fd5b6000600560016101000a81548160ff0219169083151502179055507fcbdf0fab2b7a1540009af97a79f3ea7944943c175155b588639cec284eebc804600560019054906101000a900460ff16604051808215151515815260200191505060405180910390a16001905090565b6000613015336119cd565b1515613089576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4163636573732069732064656e6965642e00000000000000000000000000000081525060200191505060405180910390fd5b600760009054906101000a900460ff161515613159576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604e8152602001807f536f7272792c20796f752063616e2774206d696e74206174207468697320746981526020017f6d6520626563617573652074686520746172676574206861736e27742062656581526020017f6e2072656163686564207965742e00000000000000000000000000000000000081525060600191505060405180910390fd5b6000600654141515156131fa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603f8152602001807f596f75206e65656420746f2073706563696679207468652049434f20656e642081526020017f64617465206265666f7265206d696e74696e672074686520746f6b656e732e0081525060400191505060405180910390fd5b6303c26700600654014211151561329f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260358152602001807f4163636573732069732064656e6965642c206974277320746f6f206561726c7981526020017f20746f206d696e74207465616d20746f6b656e732e000000000000000000000081525060400191505060405180910390fd5b6132ec6040805190810160405280600481526020017f7465616d000000000000000000000000000000000000000000000000000000008152503369d3c21bcecceda100000060280261450a565b905090565b69d3c21bcecceda100000060080281565b61330b336119cd565b151561337f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4163636573732069732064656e6965642e00000000000000000000000000000081525060200191505060405180910390fd5b600560009054906101000a900460ff1615151561342a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001807f536f727279206275742074686520636f6e74726163742069736e27742070617581526020017f7365642e0000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6001600560006101000a81548160ff0219169083151502179055507f9e87fac88ff661f02d44f95383c817fece4bce600a3dab7a54406878b965e75260405160405180910390a1565b69d3c21bcecceda100000060110281565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b69d3c21bcecceda1000000600f0281565b69d3c21bcecceda1000000600a0281565b6040805190810160405280600481526020017f46554c430000000000000000000000000000000000000000000000000000000081525081565b600560019054906101000a900460ff1681565b6000613523336119cd565b1515613597576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4163636573732069732064656e6965642e00000000000000000000000000000081525060200191505060405180910390fd5b600760009054906101000a900460ff161515613667576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604e8152602001807f536f7272792c20796f752063616e2774206d696e74206174207468697320746981526020017f6d6520626563617573652074686520746172676574206861736e27742062656581526020017f6e2072656163686564207965742e00000000000000000000000000000000000081525060600191505060405180910390fd5b600060065414151515613708576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603f8152602001807f596f75206e65656420746f2073706563696679207468652049434f20656e642081526020017f64617465206265666f7265206d696e74696e672074686520746f6b656e732e0081525060400191505060405180910390fd5b6302d2760060065401421115156137ad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603c8152602001807f4163636573732069732064656e6965642c206974277320746f6f206561726c7981526020017f20746f206d696e7420746865207265736572766520746f6b656e732e0000000081525060400191505060405180910390fd5b6137fa6040805190810160405280601281526020017f6f7065726174696f6e616c5265736572766500000000000000000000000000008152503369d3c21bcecceda100000060110261450a565b905090565b60008061380b336119cd565b151561387f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4163636573732069732064656e6965642e00000000000000000000000000000081525060200191505060405180910390fd5b600091505b838390508260ff161015613a7e5783838360ff1681811015156138a357fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141580156139495750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b80156139a35750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b15613a71576001600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555083838360ff168181101515613a1157fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e33960405160405180910390a25b8180600101925050613884565b50505050565b600033600560009054906101000a900460ff1680613aaf5750600560019054906101000a900460ff16155b15613b5857613abd816119cd565b1515613b57576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001807f4f7065726174696f6e206e6f7420616c6c6f7765642e20546865207472616e7381526020017f66657220737461746520697320726573747269637465642e000000000000000081525060400191505060405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614151515613bfd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f496e76616c696420616464726573732e0000000000000000000000000000000081525060200191505060405180910390fd5b613c078484614d61565b91505092915050565b69d3c21bcecceda1000000600a0281565b69d3c21bcecceda100000060280281565b600033600560009054906101000a900460ff1680613c5d5750600560019054906101000a900460ff16155b15613d0657613c6b816119cd565b1515613d05576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001807f4f7065726174696f6e206e6f7420616c6c6f7765642e20546865207472616e7381526020017f66657220737461746520697320726573747269637465642e000000000000000081525060400191505060405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614151515613dab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f496e76616c696420616464726573732e0000000000000000000000000000000081525060200191505060405180910390fd5b613db58484614f81565b91505092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000613e50336119cd565b1515613ec4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4163636573732069732064656e6965642e00000000000000000000000000000081525060200191505060405180910390fd5b600760009054906101000a900460ff161515613f94576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604e8152602001807f536f7272792c20796f752063616e2774206d696e74206174207468697320746981526020017f6d6520626563617573652074686520746172676574206861736e27742062656581526020017f6e2072656163686564207965742e00000000000000000000000000000000000081525060600191505060405180910390fd5b600060065414151515614035576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603f8152602001807f596f75206e65656420746f2073706563696679207468652049434f20656e642081526020017f64617465206265666f7265206d696e74696e672074686520746f6b656e732e0081525060400191505060405180910390fd5b6303c2670060065401421115156140da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260408152602001807f4163636573732069732064656e6965642c206974277320746f6f206561726c7981526020017f20746f206d696e742074686520706172746e65727368697020746f6b656e732e81525060400191505060405180910390fd5b6141276040805190810160405280601181526020017f737472617465676963506172746e6572730000000000000000000000000000008152503369d3c21bcecceda1000000600a0261450a565b905090565b600080614138336119cd565b15156141ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4163636573732069732064656e6965642e00000000000000000000000000000081525060200191505060405180910390fd5b600091505b838390508260ff1610156143aa5783838360ff1681811015156141d057fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141580156142755750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b80156142cf5750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b1561439d576000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555083838360ff16818110151561433d57fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fa3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f60405160405180910390a25b81806001019250506141b1565b50505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561440c57600080fd5b6144158161517d565b50565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600560009054906101000a900460ff161515156145b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001807f536f727279206275742074686520636f6e74726163742069736e27742070617581526020017f7365642e0000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b83600860006145c583615279565b6000191660001916815260200190815260200160002060009054906101000a900460ff161561465c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f4475706c6963617465206d696e74696e67206b657920737570706c6965642e0081525060200191505060405180910390fd5b6146668484615351565b60016008600061467588615279565b6000191660001916815260200190815260200160002060006101000a81548160ff02191690831515021790555060019150509392505050565b6000806000809150600090505b83518110156146fd576146ee84828151811015156146d557fe5b906020019060200201518361561b90919063ffffffff16565b915080806001019150506146bb565b8192505050919050565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561475657600080fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111515156147e157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561481d57600080fd5b61486e826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461563790919063ffffffff16565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550614901826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461561b90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506149d282600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461563790919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b614acc3382615650565b50565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508083101515614be1576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550614c75565b614bf4838261563790919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515614db057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515614dec57600080fd5b614e3d826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461563790919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550614ed0826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461561b90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b600061501282600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461561b90919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156151b957600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000816040516020018082805190602001908083835b6020831015156152b4578051825260208201915060208101905060208303925061528f565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310151561531d57805182526020820191506020810190506020830392506152f8565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390209050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156153f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f496e76616c696420616464726573732e0000000000000000000000000000000081525060200191505060405180910390fd5b69d3c21bcecceda100000060c8026154198260015461561b90919063ffffffff16565b111515156154b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603b8152602001807f536f727279206275742074686520746f74616c20737570706c792063616e277481526020017f2065786365656420746865206d6178696d756d20737570706c792e000000000081525060400191505060405180910390fd5b615506816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461561b90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061555d8160015461561b90919063ffffffff16565b6001819055508173ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885826040518082815260200191505060405180910390a28173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6000818301905082811015151561562e57fe5b80905092915050565b600082821115151561564557fe5b818303905092915050565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811115151561569d57600080fd5b6156ee816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461563790919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506157458160015461563790919063ffffffff16565b6001819055508173ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5826040518082815260200191505060405180910390a2600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a350505600a165627a7a72305820dbaba410c9b5a15f5b917f893e8fdc382492d9bb478f135ae19b018922876fc90029",
  "deployedBytecode": "0x608060405260043610610230576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde0314610235578063095ea7b3146102c55780630c69cc801461032a578063153a1f3e146103595780631785f53c1461041a57806318160ddd1461045d57806323b872dd1461048857806324d7806c1461050d57806328e665ef146105685780632a62738b146105975780632ff2e9dc146105c2578063313ce567146105ed57806332cb6b0c1461061e5780633bde5ba8146106495780633cd584d6146106785780633f4ba83a146106a757806342966c68146106be578063429b62e5146106eb57806343e91384146107465780635c975abb1461078b57806366188463146107ba578063704802751461081f57806370a0823114610862578063715018a6146108b9578063728b4293146108d057806372c174db146108ff57806377f9db331461092e5780637bfea0901461095d5780637f0aab321461098c5780638456cb59146109b757806388304abb146109ce5780638da5cb5b146109f957806391222f5414610a505780639154b07e14610a7b57806395d89b4114610aa65780639613252114610b3657806398e5026914610b65578063a8e6e77b14610b94578063a9059cbb14610bcf578063b348904a14610c34578063beff0b9514610c5f578063d73dd62314610c8a578063dd62ed3e14610cef578063e6575fb314610d66578063f1bca30f14610d95578063f2fde38b14610dd0575b600080fd5b34801561024157600080fd5b5061024a610e13565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561028a57808201518184015260208101905061026f565b50505050905090810190601f1680156102b75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102d157600080fd5b50610310600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e4c565b604051808215151515815260200191505060405180910390f35b34801561033657600080fd5b5061033f610fd8565b604051808215151515815260200191505060405180910390f35b34801561036557600080fd5b506104006004803603810190808035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919291929080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290505050611179565b604051808215151515815260200191505060405180910390f35b34801561042657600080fd5b5061045b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061147c565b005b34801561046957600080fd5b50610472611835565b6040518082815260200191505060405180910390f35b34801561049457600080fd5b506104f3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061183f565b604051808215151515815260200191505060405180910390f35b34801561051957600080fd5b5061054e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506119cd565b604051808215151515815260200191505060405180910390f35b34801561057457600080fd5b5061057d611a83565b604051808215151515815260200191505060405180910390f35b3480156105a357600080fd5b506105ac611cc4565b6040518082815260200191505060405180910390f35b3480156105ce57600080fd5b506105d7611cca565b6040518082815260200191505060405180910390f35b3480156105f957600080fd5b50610602611cdb565b604051808260ff1660ff16815260200191505060405180910390f35b34801561062a57600080fd5b50610633611ce0565b6040518082815260200191505060405180910390f35b34801561065557600080fd5b5061065e611cf1565b604051808215151515815260200191505060405180910390f35b34801561068457600080fd5b5061068d611d04565b604051808215151515815260200191505060405180910390f35b3480156106b357600080fd5b506106bc611ea5565b005b3480156106ca57600080fd5b506106e960048036038101908080359060200190929190505050612015565b005b3480156106f757600080fd5b5061072c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506120cc565b604051808215151515815260200191505060405180910390f35b34801561075257600080fd5b50610771600480360381019080803590602001909291905050506120ec565b604051808215151515815260200191505060405180910390f35b34801561079757600080fd5b506107a06122ef565b604051808215151515815260200191505060405180910390f35b3480156107c657600080fd5b50610805600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612302565b604051808215151515815260200191505060405180910390f35b34801561082b57600080fd5b50610860600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061248e565b005b34801561086e57600080fd5b506108a3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612848565b6040518082815260200191505060405180910390f35b3480156108c557600080fd5b506108ce612890565b005b3480156108dc57600080fd5b506108e5612995565b604051808215151515815260200191505060405180910390f35b34801561090b57600080fd5b50610914612ae3565b604051808215151515815260200191505060405180910390f35b34801561093a57600080fd5b50610943612dca565b604051808215151515815260200191505060405180910390f35b34801561096957600080fd5b5061097261300a565b604051808215151515815260200191505060405180910390f35b34801561099857600080fd5b506109a16132f1565b6040518082815260200191505060405180910390f35b3480156109c357600080fd5b506109cc613302565b005b3480156109da57600080fd5b506109e3613473565b6040518082815260200191505060405180910390f35b348015610a0557600080fd5b50610a0e613484565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610a5c57600080fd5b50610a656134aa565b6040518082815260200191505060405180910390f35b348015610a8757600080fd5b50610a906134bb565b6040518082815260200191505060405180910390f35b348015610ab257600080fd5b50610abb6134cc565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610afb578082015181840152602081019050610ae0565b50505050905090810190601f168015610b285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610b4257600080fd5b50610b4b613505565b604051808215151515815260200191505060405180910390f35b348015610b7157600080fd5b50610b7a613518565b604051808215151515815260200191505060405180910390f35b348015610ba057600080fd5b50610bcd6004803603810190808035906020019082018035906020019190919293919293905050506137ff565b005b348015610bdb57600080fd5b50610c1a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050613a84565b604051808215151515815260200191505060405180910390f35b348015610c4057600080fd5b50610c49613c10565b6040518082815260200191505060405180910390f35b348015610c6b57600080fd5b50610c74613c21565b6040518082815260200191505060405180910390f35b348015610c9657600080fd5b50610cd5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050613c32565b604051808215151515815260200191505060405180910390f35b348015610cfb57600080fd5b50610d50600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613dbe565b6040518082815260200191505060405180910390f35b348015610d7257600080fd5b50610d7b613e45565b604051808215151515815260200191505060405180910390f35b348015610da157600080fd5b50610dce60048036038101908080359060200190820180359060200191909192939192939050505061412c565b005b348015610ddc57600080fd5b50610e11600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506143b0565b005b6040805190810160405280600d81526020017f46756c6372756d20546f6b656e0000000000000000000000000000000000000081525081565b600033600560009054906101000a900460ff1680610e775750600560019054906101000a900460ff16155b15610f2057610e85816119cd565b1515610f1f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001807f4f7065726174696f6e206e6f7420616c6c6f7765642e20546865207472616e7381526020017f66657220737461746520697320726573747269637465642e000000000000000081525060400191505060405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614151515610fc5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f496e76616c696420616464726573732e0000000000000000000000000000000081525060200191505060405180910390fd5b610fcf8484614418565b91505092915050565b6000610fe3336119cd565b1515611057576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4163636573732069732064656e6965642e00000000000000000000000000000081525060200191505060405180910390fd5b600760009054906101000a900460ff161515611127576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604e8152602001807f536f7272792c20796f752063616e2774206d696e74206174207468697320746981526020017f6d6520626563617573652074686520746172676574206861736e27742062656581526020017f6e2072656163686564207965742e00000000000000000000000000000000000081525060600191505060405180910390fd5b6111746040805190810160405280601081526020017f636f6d6d756e69747952657761726473000000000000000000000000000000008152503369d3c21bcecceda1000000600f0261450a565b905090565b6000806000611187336119cd565b15156111fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4163636573732069732064656e6965642e00000000000000000000000000000081525060200191505060405180910390fd5b83518551141515611274576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f496e76616c6964206f7065726174696f6e2e000000000000000000000000000081525060200191505060405180910390fd5b61127d846146ae565b9150816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015151561135b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603e8152602001807f596f7520646f6e277420686176652073756666696369656e742066756e64732081526020017f746f207472616e7366657220616d6f756e742074686174206c617267652e000081525060400191505060405180910390fd5b600090505b84518110156113af576113a1858281518110151561137a57fe5b90602001906020020151858381518110151561139257fe5b90602001906020020151613a84565b508080600101915050611360565b7f9c1a54ca5f41a3eaa7ccf54ca1d1b659718f8da05cb67ddefe376ddbe38511bd8585604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b838110156114195780820151818401526020810190506113fe565b50505050905001838103825284818151815260200191508051906020019060200280838360005b8381101561145b578082015181840152602081019050611440565b5050505090500194505050505060405180910390a160019250505092915050565b611485336119cd565b15156114f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4163636573732069732064656e6965642e00000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561159e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f496e76616c696420616464726573732e0000000000000000000000000000000081525060200191505060405180910390fd5b600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515611685576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001807f5468697320616464726573732069736e277420616e2061646d696e697374726181526020017f746f722e0000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611797576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260478152602001807f546865206f776e65722063616e6e6f74206265206164646564206f722072656d81526020017f6f76656420746f206f722066726f6d207468652061646d696e6973747261746f81526020017f72206c6973742e0000000000000000000000000000000000000000000000000081525060600191505060405180910390fd5b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fa3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f60405160405180910390a250565b6000600154905090565b600083600560009054906101000a900460ff168061186a5750600560019054906101000a900460ff16155b1561191357611878816119cd565b1515611912576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001807f4f7065726174696f6e206e6f7420616c6c6f7765642e20546865207472616e7381526020017f66657220737461746520697320726573747269637465642e000000000000000081525060400191505060405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141515156119b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f496e76616c696420616464726573732e0000000000000000000000000000000081525060200191505060405180910390fd5b6119c3858585614707565b9150509392505050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611a2e5760019050611a7e565b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1690505b919050565b6000611a8e336119cd565b1515611b02576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4163636573732069732064656e6965642e00000000000000000000000000000081525060200191505060405180910390fd5b600560009054906101000a900460ff16151515611bad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001807f536f727279206275742074686520636f6e74726163742069736e27742070617581526020017f7365642e0000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600560019054906101000a900460ff16151515611c58576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603c8152602001807f496e76616c6964206f7065726174696f6e2e20546865207472616e736665722081526020017f7374617465206973206e6f206d6f726520726573747269637465642e0000000081525060400191505060405180910390fd5b6001600560016101000a81548160ff0219169083151502179055507fcbdf0fab2b7a1540009af97a79f3ea7944943c175155b588639cec284eebc804600560019054906101000a900460ff16604051808215151515815260200191505060405180910390a16001905090565b60065481565b69d3c21bcecceda100000060640281565b601281565b69d3c21bcecceda100000060c80281565b600760009054906101000a900460ff1681565b6000611d0f336119cd565b1515611d83576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4163636573732069732064656e6965642e00000000000000000000000000000081525060200191505060405180910390fd5b600760009054906101000a900460ff161515611e53576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604e8152602001807f536f7272792c20796f752063616e2774206d696e74206174207468697320746981526020017f6d6520626563617573652074686520746172676574206861736e27742062656581526020017f6e2072656163686564207965742e00000000000000000000000000000000000081525060600191505060405180910390fd5b611ea06040805190810160405280601881526020017f696e697469616c537472617465676963506172746e65727300000000000000008152503369d3c21bcecceda1000000600a0261450a565b905090565b611eae336119cd565b1515611f22576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4163636573732069732064656e6965642e00000000000000000000000000000081525060200191505060405180910390fd5b600560009054906101000a900460ff161515611fcc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f536f727279206275742074686520636f6e74726163742069732070617573656481526020017f2e0000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6000600560006101000a81548160ff0219169083151502179055507fa45f47fdea8a1efdd9029a5691c7f759c32b7c698632b563573e155625d1693360405160405180910390a1565b600560009054906101000a900460ff161515156120c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001807f536f727279206275742074686520636f6e74726163742069736e27742070617581526020017f7365642e0000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6120c981614ac2565b50565b60046020528060005260406000206000915054906101000a900460ff1681565b60006120f7336119cd565b151561216b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4163636573732069732064656e6965642e00000000000000000000000000000081525060200191505060405180910390fd5b600060065414151561220b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f5468652049434f20656e6420646174652077617320616c72656164792073657481526020017f2e0000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b42821115156122a8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001807f5468652049434f20656e642064617465206d75737420626520696e207468652081526020017f6675747572652e0000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b816006819055507f8af2dc49ef865a055c56e19964fd4e43183a7143e12813a8246daef30a2b6e0f826040518082815260200191505060405180910390a160019050919050565b600560009054906101000a900460ff1681565b600033600560009054906101000a900460ff168061232d5750600560019054906101000a900460ff16155b156123d65761233b816119cd565b15156123d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001807f4f7065726174696f6e206e6f7420616c6c6f7765642e20546865207472616e7381526020017f66657220737461746520697320726573747269637465642e000000000000000081525060400191505060405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415151561247b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f496e76616c696420616464726573732e0000000000000000000000000000000081525060200191505060405180910390fd5b6124858484614acf565b91505092915050565b612497336119cd565b151561250b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4163636573732069732064656e6965642e00000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156125b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f496e76616c696420616464726573732e0000000000000000000000000000000081525060200191505060405180910390fd5b600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151515612698576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001807f54686973206164647265737320697320616c726561647920616e2061646d696e81526020017f6973747261746f722e000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156127aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260478152602001807f546865206f776e65722063616e6e6f74206265206164646564206f722072656d81526020017f6f76656420746f206f722066726f6d207468652061646d696e6973747261746f81526020017f72206c6973742e0000000000000000000000000000000000000000000000000081525060600191505060405180910390fd5b6001600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e33960405160405180910390a250565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156128ec57600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a26000600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60006129a0336119cd565b1515612a14576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4163636573732069732064656e6965642e00000000000000000000000000000081525060200191505060405180910390fd5b600760009054906101000a900460ff16151515612a99576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4163636573732069732064656e6965642e00000000000000000000000000000081525060200191505060405180910390fd5b6001600760006101000a81548160ff0219169083151502179055507f8735407ca1ae8b74dd5770f504b2e8150f9a70d8eebb2ead3961051c814bda6c60405160405180910390a190565b6000612aee336119cd565b1515612b62576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4163636573732069732064656e6965642e00000000000000000000000000000081525060200191505060405180910390fd5b600760009054906101000a900460ff161515612c32576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604e8152602001807f536f7272792c20796f752063616e2774206d696e74206174207468697320746981526020017f6d6520626563617573652074686520746172676574206861736e27742062656581526020017f6e2072656163686564207965742e00000000000000000000000000000000000081525060600191505060405180910390fd5b600060065414151515612cd3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603f8152602001807f596f75206e65656420746f2073706563696679207468652049434f20656e642081526020017f64617465206265666f7265206d696e74696e672074686520746f6b656e732e0081525060400191505060405180910390fd5b6301e133806006540142111515612d78576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260398152602001807f4163636573732069732064656e6965642c206974277320746f6f206561726c7981526020017f20746f206d696e742061647669736f727920746f6b656e732e0000000000000081525060400191505060405180910390fd5b612dc56040805190810160405280600881526020017f61647669736f72730000000000000000000000000000000000000000000000008152503369d3c21bcecceda100000060080261450a565b905090565b6000612dd5336119cd565b1515612e49576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4163636573732069732064656e6965642e00000000000000000000000000000081525060200191505060405180910390fd5b600560009054906101000a900460ff16151515612ef4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001807f536f727279206275742074686520636f6e74726163742069736e27742070617581526020017f7365642e0000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600560019054906101000a900460ff161515612f9e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603c8152602001807f496e76616c6964206f7065726174696f6e2e20546865207472616e736665722081526020017f737461746520697320616c726561647920726573747269637465642e0000000081525060400191505060405180910390fd5b6000600560016101000a81548160ff0219169083151502179055507fcbdf0fab2b7a1540009af97a79f3ea7944943c175155b588639cec284eebc804600560019054906101000a900460ff16604051808215151515815260200191505060405180910390a16001905090565b6000613015336119cd565b1515613089576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4163636573732069732064656e6965642e00000000000000000000000000000081525060200191505060405180910390fd5b600760009054906101000a900460ff161515613159576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604e8152602001807f536f7272792c20796f752063616e2774206d696e74206174207468697320746981526020017f6d6520626563617573652074686520746172676574206861736e27742062656581526020017f6e2072656163686564207965742e00000000000000000000000000000000000081525060600191505060405180910390fd5b6000600654141515156131fa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603f8152602001807f596f75206e65656420746f2073706563696679207468652049434f20656e642081526020017f64617465206265666f7265206d696e74696e672074686520746f6b656e732e0081525060400191505060405180910390fd5b6303c26700600654014211151561329f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260358152602001807f4163636573732069732064656e6965642c206974277320746f6f206561726c7981526020017f20746f206d696e74207465616d20746f6b656e732e000000000000000000000081525060400191505060405180910390fd5b6132ec6040805190810160405280600481526020017f7465616d000000000000000000000000000000000000000000000000000000008152503369d3c21bcecceda100000060280261450a565b905090565b69d3c21bcecceda100000060080281565b61330b336119cd565b151561337f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4163636573732069732064656e6965642e00000000000000000000000000000081525060200191505060405180910390fd5b600560009054906101000a900460ff1615151561342a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001807f536f727279206275742074686520636f6e74726163742069736e27742070617581526020017f7365642e0000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6001600560006101000a81548160ff0219169083151502179055507f9e87fac88ff661f02d44f95383c817fece4bce600a3dab7a54406878b965e75260405160405180910390a1565b69d3c21bcecceda100000060110281565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b69d3c21bcecceda1000000600f0281565b69d3c21bcecceda1000000600a0281565b6040805190810160405280600481526020017f46554c430000000000000000000000000000000000000000000000000000000081525081565b600560019054906101000a900460ff1681565b6000613523336119cd565b1515613597576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4163636573732069732064656e6965642e00000000000000000000000000000081525060200191505060405180910390fd5b600760009054906101000a900460ff161515613667576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604e8152602001807f536f7272792c20796f752063616e2774206d696e74206174207468697320746981526020017f6d6520626563617573652074686520746172676574206861736e27742062656581526020017f6e2072656163686564207965742e00000000000000000000000000000000000081525060600191505060405180910390fd5b600060065414151515613708576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603f8152602001807f596f75206e65656420746f2073706563696679207468652049434f20656e642081526020017f64617465206265666f7265206d696e74696e672074686520746f6b656e732e0081525060400191505060405180910390fd5b6302d2760060065401421115156137ad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603c8152602001807f4163636573732069732064656e6965642c206974277320746f6f206561726c7981526020017f20746f206d696e7420746865207265736572766520746f6b656e732e0000000081525060400191505060405180910390fd5b6137fa6040805190810160405280601281526020017f6f7065726174696f6e616c5265736572766500000000000000000000000000008152503369d3c21bcecceda100000060110261450a565b905090565b60008061380b336119cd565b151561387f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4163636573732069732064656e6965642e00000000000000000000000000000081525060200191505060405180910390fd5b600091505b838390508260ff161015613a7e5783838360ff1681811015156138a357fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141580156139495750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b80156139a35750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b15613a71576001600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555083838360ff168181101515613a1157fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e33960405160405180910390a25b8180600101925050613884565b50505050565b600033600560009054906101000a900460ff1680613aaf5750600560019054906101000a900460ff16155b15613b5857613abd816119cd565b1515613b57576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001807f4f7065726174696f6e206e6f7420616c6c6f7765642e20546865207472616e7381526020017f66657220737461746520697320726573747269637465642e000000000000000081525060400191505060405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614151515613bfd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f496e76616c696420616464726573732e0000000000000000000000000000000081525060200191505060405180910390fd5b613c078484614d61565b91505092915050565b69d3c21bcecceda1000000600a0281565b69d3c21bcecceda100000060280281565b600033600560009054906101000a900460ff1680613c5d5750600560019054906101000a900460ff16155b15613d0657613c6b816119cd565b1515613d05576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001807f4f7065726174696f6e206e6f7420616c6c6f7765642e20546865207472616e7381526020017f66657220737461746520697320726573747269637465642e000000000000000081525060400191505060405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614151515613dab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f496e76616c696420616464726573732e0000000000000000000000000000000081525060200191505060405180910390fd5b613db58484614f81565b91505092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000613e50336119cd565b1515613ec4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4163636573732069732064656e6965642e00000000000000000000000000000081525060200191505060405180910390fd5b600760009054906101000a900460ff161515613f94576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604e8152602001807f536f7272792c20796f752063616e2774206d696e74206174207468697320746981526020017f6d6520626563617573652074686520746172676574206861736e27742062656581526020017f6e2072656163686564207965742e00000000000000000000000000000000000081525060600191505060405180910390fd5b600060065414151515614035576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603f8152602001807f596f75206e65656420746f2073706563696679207468652049434f20656e642081526020017f64617465206265666f7265206d696e74696e672074686520746f6b656e732e0081525060400191505060405180910390fd5b6303c2670060065401421115156140da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260408152602001807f4163636573732069732064656e6965642c206974277320746f6f206561726c7981526020017f20746f206d696e742074686520706172746e65727368697020746f6b656e732e81525060400191505060405180910390fd5b6141276040805190810160405280601181526020017f737472617465676963506172746e6572730000000000000000000000000000008152503369d3c21bcecceda1000000600a0261450a565b905090565b600080614138336119cd565b15156141ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4163636573732069732064656e6965642e00000000000000000000000000000081525060200191505060405180910390fd5b600091505b838390508260ff1610156143aa5783838360ff1681811015156141d057fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141580156142755750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b80156142cf5750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b1561439d576000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555083838360ff16818110151561433d57fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fa3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f60405160405180910390a25b81806001019250506141b1565b50505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561440c57600080fd5b6144158161517d565b50565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600560009054906101000a900460ff161515156145b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001807f536f727279206275742074686520636f6e74726163742069736e27742070617581526020017f7365642e0000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b83600860006145c583615279565b6000191660001916815260200190815260200160002060009054906101000a900460ff161561465c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f4475706c6963617465206d696e74696e67206b657920737570706c6965642e0081525060200191505060405180910390fd5b6146668484615351565b60016008600061467588615279565b6000191660001916815260200190815260200160002060006101000a81548160ff02191690831515021790555060019150509392505050565b6000806000809150600090505b83518110156146fd576146ee84828151811015156146d557fe5b906020019060200201518361561b90919063ffffffff16565b915080806001019150506146bb565b8192505050919050565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561475657600080fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111515156147e157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561481d57600080fd5b61486e826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461563790919063ffffffff16565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550614901826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461561b90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506149d282600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461563790919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b614acc3382615650565b50565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508083101515614be1576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550614c75565b614bf4838261563790919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515614db057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515614dec57600080fd5b614e3d826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461563790919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550614ed0826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461561b90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b600061501282600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461561b90919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156151b957600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000816040516020018082805190602001908083835b6020831015156152b4578051825260208201915060208101905060208303925061528f565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310151561531d57805182526020820191506020810190506020830392506152f8565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390209050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156153f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f496e76616c696420616464726573732e0000000000000000000000000000000081525060200191505060405180910390fd5b69d3c21bcecceda100000060c8026154198260015461561b90919063ffffffff16565b111515156154b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603b8152602001807f536f727279206275742074686520746f74616c20737570706c792063616e277481526020017f2065786365656420746865206d6178696d756d20737570706c792e000000000081525060400191505060405180910390fd5b615506816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461561b90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061555d8160015461561b90919063ffffffff16565b6001819055508173ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885826040518082815260200191505060405180910390a28173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6000818301905082811015151561562e57fe5b80905092915050565b600082821115151561564557fe5b818303905092915050565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811115151561569d57600080fd5b6156ee816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461563790919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506157458160015461563790919063ffffffff16565b6001819055508173ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5826040518082815260200191505060405180910390a2600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a350505600a165627a7a72305820dbaba410c9b5a15f5b917f893e8fdc382492d9bb478f135ae19b018922876fc90029",
  "sourceMap": "1172:6127:2:-;;;815:5:1;794:26;;;;;;;;;;;;;;;;;;;;1599:5:3;1576:28;;;;;;;;;;;;;;;;;;;;1795:5:2;1767:33;;;;;;;;;;;;;;;;;;;;575:10:5;567:5;;:18;;;;;;;;;;;;;;;;;;1970:38:3;1981:10;1645:17;1762:3;:13;1970:10;;;:38;;;:::i;:::-;1172:6127:2;;7185:394:3;7269:1;7254:17;;:3;:17;;;;7246:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1645:17;1704:3;:13;7306:24;7323:6;7306:12;;:16;;;;;;:24;;;;;:::i;:::-;:38;;7298:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7431:25;7449:6;7431:8;:13;7440:3;7431:13;;;;;;;;;;;;;;;;:17;;;;;;:25;;;;;:::i;:::-;7415:8;:13;7424:3;7415:13;;;;;;;;;;;;;;;:41;;;;7477:24;7494:6;7477:12;;:16;;;;;;:24;;;;;:::i;:::-;7462:12;:39;;;;7518:3;7513:17;;;7523:6;7513:17;;;;;;;;;;;;;;;;;;7562:3;7541:33;;7558:1;7541:33;;;7567:6;7541:33;;;;;;;;;;;;;;;;;;7185:394;;:::o;1238:128:4:-;1298:9;1324:2;1319;:7;1315:11;;1344:2;1339:1;:7;;1332:15;;;;;;1360:1;1353:8;;1238:128;;;;:::o;1172:6127:2:-;;;;;;;",
  "deployedSourceMap": "1172:6127:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1465:45:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1465:45:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1465:45:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4419:202;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4419:202:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3183:273:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3183:273:2;;;;;;;;;;;;;;;;;;;;;;;;;;;5954:634:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5954:634:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2370:407:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2370:407:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;389:83:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;389:83:6;;;;;;;;;;;;;;;;;;;;;;;3910:214:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3910:214:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3515:149:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3515:149:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2483:249:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2483:249:3;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:25:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1301:25:2;;;;;;;;;;;;;;;;;;;;;;;1721:54:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1721:54:3;;;;;;;;;;;;;;;;;;;;;;;1426:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1426:35:3;;;;;;;;;;;;;;;;;;;;;;;;;;;1667:50;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1667:50:3;;;;;;;;;;;;;;;;;;;;;;;1767:33:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1767:33:2;;;;;;;;;;;;;;;;;;;;;;;;;;;5558:310;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5558:310:2;;;;;;;;;;;;;;;;;;;;;;;;;;;1331:95:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1331:95:1;;;;;;6757:80:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6757:80:3;;;;;;;;;;;;;;;;;;;;;;;;;;802:38:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;802:38:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2700:287:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2700:287:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:26:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;794:26:1;;;;;;;;;;;;;;;;;;;;;;;;;;;5439:240:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5439:240:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1237:364:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1237:364:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;1149:99:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1149:99:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:111:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1001:111:5;;;;;;2334:163:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2334:163:2;;;;;;;;;;;;;;;;;;;;;;;;;;;4889:454;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4889:454:2;;;;;;;;;;;;;;;;;;;;;;;;;;;2802:247:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2802:247:3;;;;;;;;;;;;;;;;;;;;;;;;;;;4275:438:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4275:438:2;;;;;;;;;;;;;;;;;;;;;;;;;;;1533:61;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1533:61:2;;;;;;;;;;;;;;;;;;;;;;;1170:93:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1170:93:1;;;;;;1406:61:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1406:61:2;;;;;;;;;;;;;;;;;;;;;;;238:20:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:5;;;;;;;;;;;;;;;;;;;;;;;;;;;1331:71:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1331:71:2;;;;;;;;;;;;;;;;;;;;;;;1686:76;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1686:76:2;;;;;;;;;;;;;;;;;;;;;;;1514:38:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1514:38:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1514:38:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1576:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1576:28:3;;;;;;;;;;;;;;;;;;;;;;;;;;;3637:462:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3637:462:2;;;;;;;;;;;;;;;;;;;;;;;;;;;1746:472:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1746:472:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3423:189:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3423:189:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1598:84:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1598:84:2;;;;;;;;;;;;;;;;;;;;;;;1471:58;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1471:58:2;;;;;;;;;;;;;;;;;;;;;;;4906:230:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4906:230:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2321:153:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2321:153:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6082:497:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6082:497:2;;;;;;;;;;;;;;;;;;;;;;;;;;;2925:531:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2925:531:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1274:103:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1274:103:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;1465:45:3;;;;;;;;;;;;;;;;;;;;:::o;4419:202::-;4509:4;4489:10;2211:6;;;;;;;;;;;:19;;;;2222:8;;;;;;;;;;;2221:9;2211:19;2208:143;;;2244:14;2252:5;2244:7;:14::i;:::-;2243:15;2240:105;;;2270:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2240:105;2208:143;4549:1;4529:22;;:8;:22;;;;4521:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4585:31;4599:8;4609:6;4585:13;:31::i;:::-;4578:38;;4419:202;;;;;:::o;3183:273:2:-;3247:4;1042:19:0;1050:10;1042:7;:19::i;:::-;1034:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3267:13:2;;;;;;;;;;;3259:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3377:74;;;;;;;;;;;;;;;;;;;3406:10;1645:17:3;1390:2:2;:12;3377:8;:74::i;:::-;3370:81;;3183:273;:::o;5954:634:3:-;6046:4;6232:23;6409:9;1042:19:0;1050:10;1042:7;:19::i;:::-;1034:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6090:8:3;:15;6066:13;:20;:39;6058:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6258:15;6264:8;6258:5;:15::i;:::-;6232:41;;6311:15;6287:8;:20;6296:10;6287:20;;;;;;;;;;;;;;;;:39;;6279:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6421:1;6409:13;;6404:105;6428:13;:20;6424:1;:24;6404:105;;;6463:39;6472:13;6486:1;6472:16;;;;;;;;;;;;;;;;;;6490:8;6499:1;6490:11;;;;;;;;;;;;;;;;;;6463:8;:39::i;:::-;;6450:3;;;;;;;6404:105;;;6520:46;6542:13;6557:8;6520:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6520:46:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6520:46:3;;;;;;;;;;;;;;;;;;;6579:4;6572:11;;5954:634;;;;;;:::o;2370:407:0:-;1042:19;1050:10;1042:7;:19::i;:::-;1034:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2462:1;2442:22;;:8;:22;;;;2434:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2499:6;:16;2506:8;2499:16;;;;;;;;;;;;;;;;;;;;;;;;;2491:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2627:5;;;;;;;;;;;2615:17;;:8;:17;;;;2607:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2734:5;2715:6;:16;2722:8;2715:16;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;2763:8;2750:22;;;;;;;;;;;;2370:407;:::o;389:83:6:-;433:7;455:12;;448:19;;389:83;:::o;3910:214:3:-;4010:4;3995:5;2211:6;;;;;;;;;;;:19;;;;2222:8;;;;;;;;;;;2221:9;2211:19;2208:143;;;2244:14;2252:5;2244:7;:14::i;:::-;2243:15;2240:105;;;2270:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2240:105;2208:143;4045:1;4030:17;;:3;:17;;;;4022:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4081:38;4100:5;4107:3;4112:6;4081:18;:38::i;:::-;4074:45;;3910:214;;;;;;:::o;3515:149:0:-;3570:4;3597:5;;;;;;;;;;;3585:17;;:8;:17;;;3582:48;;;3619:4;3612:11;;;;3582:48;3643:6;:16;3650:8;3643:16;;;;;;;;;;;;;;;;;;;;;;;;;3636:23;;3515:149;;;;:::o;2483:249:3:-;2559:4;1042:19:0;1050:10;1042:7;:19::i;:::-;1034:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;923:6:1;;;;;;;;;;;922:7;914:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2580:8:3;;;;;;;;;;;2579:9;2571:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2671:4;2660:8;;:15;;;;;;;;;;;;;;;;;;2687:23;2701:8;;;;;;;;;;;2687:23;;;;;;;;;;;;;;;;;;;;;;2723:4;2716:11;;2483:249;:::o;1301:25:2:-;;;;:::o;1721:54:3:-;1645:17;1762:3;:13;1721:54;:::o;1426:35::-;1459:2;1426:35;:::o;1667:50::-;1645:17;1704:3;:13;1667:50;:::o;1767:33:2:-;;;;;;;;;;;;;:::o;5558:310::-;5638:4;1042:19:0;1050:10;1042:7;:19::i;:::-;1034:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5658:13:2;;;;;;;;;;;5650:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5768:95;;;;;;;;;;;;;;;;;;;5805:10;1645:17:3;1670:2:2;:12;5768:8;:95::i;:::-;5761:102;;5558:310;:::o;1331:95:1:-;1042:19:0;1050:10;1042:7;:19::i;:::-;1034:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1076:6:1;;;;;;;;;;;1068:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1395:5;1386:6;;:14;;;;;;;;;;;;;;;;;;1411:10;;;;;;;;;;1331:95::o;6757:80:3:-;923:6:1;;;;;;;;;;;922:7;914:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6814:18:3;6825:6;6814:10;:18::i;:::-;6757:80;:::o;802:38:0:-;;;;;;;;;;;;;;;;;;;;;;:::o;2700:287:2:-;2762:4;1042:19:0;1050:10;1042:7;:19::i;:::-;1034:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2796:1:2;2782:10;;:15;2774:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:3;2849:5;:11;2841:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2924:5;2911:10;:18;;;;2945:20;2959:5;2945:20;;;;;;;;;;;;;;;;;;2978:4;2971:11;;2700:287;;;:::o;794:26:1:-;;;;;;;;;;;;;:::o;5439:240:3:-;5548:4;5528:10;2211:6;;;;;;;;;;;:19;;;;2222:8;;;;;;;;;;;2221:9;2211:19;2208:143;;;2244:14;2252:5;2244:7;:14::i;:::-;2243:15;2240:105;;;2270:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2240:105;2208:143;5588:1;5568:22;;:8;:22;;;;5560:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5624:50;5647:8;5657:16;5624:22;:50::i;:::-;5617:57;;5439:240;;;;;:::o;1237:364:0:-;1042:19;1050:10;1042:7;:19::i;:::-;1034:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1326:1;1306:22;;:8;:22;;;;1298:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1364:6;:16;1371:8;1364:16;;;;;;;;;;;;;;;;;;;;;;;;;1363:17;1355:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1453:5;;;;;;;;;;;1441:17;;:8;:17;;;;1433:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1560:4;1541:6;:16;1548:8;1541:16;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;1587:8;1576:20;;;;;;;;;;;;1237:364;:::o;1149:99:6:-;1205:7;1227:8;:16;1236:6;1227:16;;;;;;;;;;;;;;;;1220:23;;1149:99;;;:::o;1001:111:5:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1077:5;;;;;;;;;;;1058:25;;;;;;;;;;;;1105:1;1089:5;;:18;;;;;;;;;;;;;;;;;;1001:111::o;2334:163:2:-;2383:4;1042:19:0;1050:10;1042:7;:19::i;:::-;1034:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2404:13:2;;;;;;;;;;;2403:14;2395:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2461:4;2445:13;;:20;;;;;;;;;;;;;;;;;;2477:15;;;;;;;;;;2334:163;:::o;4889:454::-;4949:4;1042:19:0;1050:10;1042:7;:19::i;:::-;1034:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4969:13:2;;;;;;;;;;;4961:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5093:1;5079:10;;:15;;5071:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5196:8;5183:10;;:21;5176:3;:29;5168:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5281:57;;;;;;;;;;;;;;;;;;;5302:10;1645:17:3;1583:1:2;:11;5281:8;:57::i;:::-;5274:64;;4889:454;:::o;2802:247:3:-;2876:4;1042:19:0;1050:10;1042:7;:19::i;:::-;1034:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;923:6:1;;;;;;;;;;;922:7;914:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2896:8:3;;;;;;;;;;;2888:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2987:5;2976:8;;:16;;;;;;;;;;;;;;;;;;3004:23;3018:8;;;;;;;;;;;3004:23;;;;;;;;;;;;;;;;;;;;;;3040:4;3033:11;;2802:247;:::o;4275:438:2:-;4331:4;1042:19:0;1050:10;1042:7;:19::i;:::-;1034:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4351:13:2;;;;;;;;;;;4343:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4475:1;4461:10;;:15;;4453:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4578:8;4565:10;;:21;4558:3;:29;4550:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4659:49;;;;;;;;;;;;;;;;;;;4676:10;1645:17:3;1517:2:2;:12;4659:8;:49::i;:::-;4652:56;;4275:438;:::o;1533:61::-;1645:17:3;1583:1:2;:11;1533:61;:::o;1170:93:1:-;1042:19:0;1050:10;1042:7;:19::i;:::-;1034:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;923:6:1;;;;;;;;;;;922:7;914:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1235:4;1226:6;;:13;;;;;;;;;;;;;;;;;;1250:8;;;;;;;;;;1170:93::o;1406:61:2:-;1645:17:3;1455:2:2;:12;1406:61;:::o;238:20:5:-;;;;;;;;;;;;;:::o;1331:71:2:-;1645:17:3;1390:2:2;:12;1331:71;:::o;1686:76::-;1645:17:3;1750:2:2;:12;1686:76;:::o;1514:38:3:-;;;;;;;;;;;;;;;;;;;;:::o;1576:28::-;;;;;;;;;;;;;:::o;3637:462:2:-;3693:4;1042:19:0;1050:10;1042:7;:19::i;:::-;1034:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3713:13:2;;;;;;;;;;;3705:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3837:1;3823:10;;:15;;3815:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3940:8;3927:10;;:21;3920:3;:29;3912:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4028:66;;;;;;;;;;;;;;;;;;;4059:10;1645:17:3;1455:2:2;:12;4028:8;:66::i;:::-;4021:73;;3637:462;:::o;1746:472:0:-;1819:7;1867:15;1042:19;1050:10;1042:7;:19::i;:::-;1034:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1829:1;1819:11;;1815:399;1836:9;;:16;;1832:1;:20;;;1815:399;;;1885:9;;1895:1;1885:12;;;;;;;;;;;;;;;;;;;1867:30;;2083:1;2064:21;;:7;:21;;;;:41;;;;;2090:6;:15;2097:7;2090:15;;;;;;;;;;;;;;;;;;;;;;;;;2089:16;2064:41;:61;;;;;2120:5;;;;;;;;;;;2109:16;;:7;:16;;;;2064:61;2061:147;;;2155:4;2137:6;:15;2144:7;2137:15;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;2186:9;;2196:1;2186:12;;;;;;;;;;;;;;;;;;;2175:24;;;;;;;;;;;;2061:147;1854:3;;;;;;;1815:399;;;1746:472;;;;:::o;3423:189:3:-;3509:4;3489:10;2211:6;;;;;;;;;;;:19;;;;2222:8;;;;;;;;;;;2221:9;2211:19;2208:143;;;2244:14;2252:5;2244:7;:14::i;:::-;2243:15;2240:105;;;2270:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2240:105;2208:143;3544:1;3529:17;;:3;:17;;;;3521:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3580:27;3595:3;3600:6;3580:14;:27::i;:::-;3573:34;;3423:189;;;;;:::o;1598:84:2:-;1645:17:3;1670:2:2;:12;1598:84;:::o;1471:58::-;1645:17:3;1517:2:2;:12;1471:58;:::o;4906:230:3:-;5010:4;4990:10;2211:6;;;;;;;;;;;:19;;;;2222:8;;;;;;;;;;;2221:9;2211:19;2208:143;;;2244:14;2252:5;2244:7;:14::i;:::-;2243:15;2240:105;;;2270:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2240:105;2208:143;5050:1;5030:22;;:8;:22;;;;5022:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5086:45;5109:8;5119:11;5086:22;:45::i;:::-;5079:52;;4906:230;;;;;:::o;2321:153:10:-;2420:7;2444;:15;2452:6;2444:15;;;;;;;;;;;;;;;:25;2460:8;2444:25;;;;;;;;;;;;;;;;2437:32;;2321:153;;;;:::o;6082:497:2:-;6155:4;1042:19:0;1050:10;1042:7;:19::i;:::-;1034:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6175:13:2;;;;;;;;;;;6167:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6299:1;6285:10;;:15;;6277:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6402:8;6389:10;;:21;6382:3;:29;6374:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6494:80;;;;;;;;;;;;;;;;;;;6524:10;1645:17:3;1750:2:2;:12;6494:8;:80::i;:::-;6487:87;;6082:497;:::o;2925:531:0:-;3001:7;3049:15;1042:19;1050:10;1042:7;:19::i;:::-;1034:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3011:1;3001:11;;2997:455;3018:9;;:16;;3014:1;:20;;;2997:455;;;3067:9;;3077:1;3067:12;;;;;;;;;;;;;;;;;;;3049:30;;3319:1;3300:21;;:7;:21;;;;:40;;;;;3325:6;:15;3332:7;3325:15;;;;;;;;;;;;;;;;;;;;;;;;;3300:40;:60;;;;;3355:5;;;;;;;;;;;3344:16;;:7;:16;;;;3300:60;3297:149;;;3390:5;3372:6;:15;3379:7;3372:15;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;3424:9;;3434:1;3424:12;;;;;;;;;;;;;;;;;;;3411:26;;;;;;;;;;;;3297:149;3036:3;;;;;;;2997:455;;;2925:531;;;;:::o;1274:103:5:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1343:29;1362:9;1343:18;:29::i;:::-;1274:103;:::o;1814:188:10:-;1881:4;1925:6;1893:7;:19;1901:10;1893:19;;;;;;;;;;;;;;;:29;1913:8;1893:29;;;;;;;;;;;;;;;:38;;;;1963:8;1942:38;;1951:10;1942:38;;;1973:6;1942:38;;;;;;;;;;;;;;;;;;1993:4;1986:11;;1814:188;;;;:::o;7085:212:2:-;7196:4;923:6:1;;;;;;;;;;;922:7;914:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7182:4:2;2096:11;:30;2108:17;2120:4;2108:11;:17::i;:::-;2096:30;;;;;;;;;;;;;;;;;;;;;;;;;;;2093:91;;;2136:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2093:91;7208:24;7219:3;7224:7;7208:10;:24::i;:::-;7271:4;7238:11;:30;7250:17;7262:4;7250:11;:17::i;:::-;7238:30;;;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;7288:4;7281:11;;976:1:1;7085:212:2;;;;;:::o;7705:206:3:-;7760:7;7775:13;7804:9;7791:1;7775:17;;7816:1;7804:13;;7799:89;7823:7;:14;7819:1;:18;7799:89;;;7860:21;7870:7;7878:1;7870:10;;;;;;;;;;;;;;;;;;7860:5;:9;;:21;;;;:::i;:::-;7852:29;;7839:3;;;;;;;7799:89;;;7901:5;7894:12;;7705:206;;;;;:::o;726:470:10:-;832:4;864:8;:15;873:5;864:15;;;;;;;;;;;;;;;;854:6;:25;;846:34;;;;;;;;904:7;:14;912:5;904:14;;;;;;;;;;;;;;;:26;919:10;904:26;;;;;;;;;;;;;;;;894:6;:36;;886:45;;;;;;;;960:1;945:17;;:3;:17;;;;937:26;;;;;;;;988:27;1008:6;988:8;:15;997:5;988:15;;;;;;;;;;;;;;;;:19;;:27;;;;:::i;:::-;970:8;:15;979:5;970:15;;;;;;;;;;;;;;;:45;;;;1037:25;1055:6;1037:8;:13;1046:3;1037:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;1021:8;:13;1030:3;1021:13;;;;;;;;;;;;;;;:41;;;;1097:38;1128:6;1097:7;:14;1105:5;1097:14;;;;;;;;;;;;;;;:26;1112:10;1097:26;;;;;;;;;;;;;;;;:30;;:38;;;;:::i;:::-;1068:7;:14;1076:5;1068:14;;;;;;;;;;;;;;;:26;1083:10;1068:26;;;;;;;;;;;;;;;:67;;;;1162:3;1146:28;;1155:5;1146:28;;;1167:6;1146:28;;;;;;;;;;;;;;;;;;1187:4;1180:11;;726:470;;;;;:::o;353:73:7:-;396:25;402:10;414:6;396:5;:25::i;:::-;353:73;:::o;3679:432:10:-;3785:4;3799:16;3818:7;:19;3826:10;3818:19;;;;;;;;;;;;;;;:29;3838:8;3818:29;;;;;;;;;;;;;;;;3799:48;;3877:8;3857:16;:28;;3853:165;;;3927:1;3895:7;:19;3903:10;3895:19;;;;;;;;;;;;;;;:29;3915:8;3895:29;;;;;;;;;;;;;;;:33;;;;3853:165;;;3981:30;3994:16;3981:8;:12;;:30;;;;:::i;:::-;3949:7;:19;3957:10;3949:19;;;;;;;;;;;;;;;:29;3969:8;3949:29;;;;;;;;;;;;;;;:62;;;;3853:165;4049:8;4028:61;;4037:10;4028:61;;;4059:7;:19;4067:10;4059:19;;;;;;;;;;;;;;;:29;4079:8;4059:29;;;;;;;;;;;;;;;;4028:61;;;;;;;;;;;;;;;;;;4102:4;4095:11;;3679:432;;;;;:::o;626:321:6:-;689:4;719:8;:20;728:10;719:20;;;;;;;;;;;;;;;;709:6;:30;;701:39;;;;;;;;769:1;754:17;;:3;:17;;;;746:26;;;;;;;;802:32;827:6;802:8;:20;811:10;802:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;779:8;:20;788:10;779:20;;;;;;;;;;;;;;;:55;;;;856:25;874:6;856:8;:13;865:3;856:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;840:8;:13;849:3;840:13;;;;;;;;;;;;;;;:41;;;;913:3;892:33;;901:10;892:33;;;918:6;892:33;;;;;;;;;;;;;;;;;;938:4;931:11;;626:321;;;;:::o;2926:296:10:-;3027:4;3081:46;3115:11;3081:7;:19;3089:10;3081:19;;;;;;;;;;;;;;;:29;3101:8;3081:29;;;;;;;;;;;;;;;;:33;;:46;;;;:::i;:::-;3041:7;:19;3049:10;3041:19;;;;;;;;;;;;;;;:29;3061:8;3041:29;;;;;;;;;;;;;;;:87;;;;3160:8;3139:61;;3148:10;3139:61;;;3170:7;:19;3178:10;3170:19;;;;;;;;;;;;;;;:29;3190:8;3170:29;;;;;;;;;;;;;;;;3139:61;;;;;;;;;;;;;;;;;;3213:4;3206:11;;2926:296;;;;:::o;1512:171:5:-;1603:1;1582:23;;:9;:23;;;;1574:32;;;;;;;;1645:9;1617:38;;1638:5;;;;;;;;;;;1617:38;;;;;;;;;;;;1669:9;1661:5;;:17;;;;;;;;;;;;;;;;;;1512:171;:::o;6699:115:2:-;6754:7;6803:4;6786:22;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6786:22:2;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6786:22:2;;;6776:33;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6776:33:2;;;;;;;;;;;;;;;;6769:40;;6699:115;;;:::o;7185:394:3:-;7269:1;7254:17;;:3;:17;;;;7246:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1645:17;1704:3;:13;7306:24;7323:6;7306:12;;:16;;:24;;;;:::i;:::-;:38;;7298:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7431:25;7449:6;7431:8;:13;7440:3;7431:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;7415:8;:13;7424:3;7415:13;;;;;;;;;;;;;;;:41;;;;7477:24;7494:6;7477:12;;:16;;:24;;;;:::i;:::-;7462:12;:39;;;;7518:3;7513:17;;;7523:6;7513:17;;;;;;;;;;;;;;;;;;7562:3;7541:33;;7558:1;7541:33;;;7567:6;7541:33;;;;;;;;;;;;;;;;;;7185:394;;:::o;1238:128:4:-;1298:9;1324:2;1319;:7;1315:11;;1344:2;1339:1;:7;;1332:15;;;;;;1360:1;1353:8;;1238:128;;;;:::o;1060:116::-;1120:7;1148:2;1142;:8;;1135:16;;;;;;1169:2;1164;:7;1157:14;;1060:116;;;;:::o;430:438:7:-;508:8;:14;517:4;508:14;;;;;;;;;;;;;;;;498:6;:24;;490:33;;;;;;;;718:26;737:6;718:8;:14;727:4;718:14;;;;;;;;;;;;;;;;:18;;:26;;;;:::i;:::-;701:8;:14;710:4;701:14;;;;;;;;;;;;;;;:43;;;;765:24;782:6;765:12;;:16;;:24;;;;:::i;:::-;750:12;:39;;;;805:4;800:18;;;811:6;800:18;;;;;;;;;;;;;;;;;;852:1;829:34;;838:4;829:34;;;856:6;829:34;;;;;;;;;;;;;;;;;;430:438;;:::o",
  "source": "/*\nCopyright 2018 Binod Nirvan @ Accept (http://accept.io)\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n    http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\npragma solidity ^0.4.24;\n\nimport \"./FulcrumTokenBase.sol\";\n\n\n///@title Fulcrum Token\n///@author Binod Nirvan\n///@notice The FULC is our native settlements token used across our marketplace, \n///and will enable many important functions within the Accept global marketplace including: \n///A medium of exchange (settlements) for Accept.io buyers and sellers A consumptive use (utility) token \n///for marketplace users to access premium features in the Accept.io DApp An incentive for users to help \n///improve the Accept Marketplace and contribute to the long-term development of Accept.io\ncontract FulcrumToken is FulcrumTokenBase {\n  //solhint-disable not-rely-on-time\n  //solium-disable security/no-block-members\n\n  uint256 public icoEndDate;\n\n  uint256 public constant ALLOCATION_FOR_COMMUNITY_REWARDS = 15 * MILLION;\n  uint256 public constant ALLOCATION_FOR_RESERVE = 17 * MILLION;\n  uint256 public constant ALLOCATION_FOR_TEAM = 40 * MILLION;\n  uint256 public constant ALLOCATION_FOR_ADVISORS = 8 * MILLION;\n  uint256 public constant ALLOCATION_FOR_INITIAL_STRATEGIC_PARTNERSHIPS = 10 * MILLION;\n  uint256 public constant ALLOCATION_FOR_STRATEGIC_PARTNERSHIPS = 10 * MILLION;\n\n  bool public targetReached = false;\n\n  mapping(bytes32 => bool) private mintingList;\n\n  event ICOEndDateSet(uint256 _date);\n  event TargetReached();\n\n  ///@notice Checks if the minting for the supplied key was already performed.\n  ///@param _key The key or category name of minting.\n  modifier whenNotMinted(string _key) {\n    if(mintingList[computeHash(_key)]) {\n      revert(\"Duplicate minting key supplied.\");\n    }\n\n    _;\n  }\n\n  ///@notice This function signifies that the minimum fundraising target was met.\n  ///Please note that this can only be called once.\n  function setSuccess() external onlyAdmin returns(bool) {\n    require(!targetReached, \"Access is denied.\");\n    targetReached = true;\n\n    emit TargetReached();\n  }\n\n  ///@notice This function enables the whitelisted application (internal application) to set the \n  /// ICO end date and can only be used once.\n  ///@param _date The date to set as the ICO end date.\n  function setICOEndDate(uint _date) external onlyAdmin returns(bool) {\n    require(icoEndDate == 0, \"The ICO end date was already set.\");\n    require(_date > now, \"The ICO end date must be in the future.\");\n\n    icoEndDate = _date;\n    \n    emit ICOEndDateSet(_date);\n    return true;\n  }\n\n  ///@notice Mints the below-mentioned amount of tokens allocated to rewarding the community.\n  //The tokens are available to the community rewards pool only if the fundraiser was successful.\n  function mintCommunityRewardTokens() external onlyAdmin returns(bool) {\n    require(targetReached, \"Sorry, you can't mint at this time because the target hasn't been reached yet.\");\n\n    return mintOnce(\"communityRewards\", msg.sender, ALLOCATION_FOR_COMMUNITY_REWARDS);\n  }\n\n  ///@notice Mints the below-mentioned amount of tokens allocated to the operational reserves.\n  //The tokens are only available in the reserves after 18 months of the ICO end.\n  function mintReserveTokens() external onlyAdmin returns(bool) {\n    require(targetReached, \"Sorry, you can't mint at this time because the target hasn't been reached yet.\");\n    require(icoEndDate != 0, \"You need to specify the ICO end date before minting the tokens.\");\n    require(now > (icoEndDate + 548 days), \"Access is denied, it's too early to mint the reserve tokens.\");\n\n    return mintOnce(\"operationalReserve\", msg.sender, ALLOCATION_FOR_RESERVE);\n  }\n\n  ///@notice Mints the below-mentioned amount of tokens allocated to the Accept.io founders.\n  //The tokens are only available to the founders after 2 year of the ICO end.\n  function mintTokensForTeam() external onlyAdmin returns(bool) {\n    require(targetReached, \"Sorry, you can't mint at this time because the target hasn't been reached yet.\");\n    require(icoEndDate != 0, \"You need to specify the ICO end date before minting the tokens.\");\n    require(now > (icoEndDate + 730 days), \"Access is denied, it's too early to mint team tokens.\");\n\n    return mintOnce(\"team\", msg.sender, ALLOCATION_FOR_TEAM);\n  }\n\n  ///@notice Mints the below-mentioned amount of tokens allocated to the Accept.io advisors.\n  //The tokens are only available to the advisors after 1 year of the ICO end.\n  function mintTokensForAdvisors() external onlyAdmin returns(bool) {\n    require(targetReached, \"Sorry, you can't mint at this time because the target hasn't been reached yet.\");\n    require(icoEndDate != 0, \"You need to specify the ICO end date before minting the tokens.\");\n    require(now > (icoEndDate + 365 days), \"Access is denied, it's too early to mint advisory tokens.\");\n\n    return mintOnce(\"advisors\", msg.sender, ALLOCATION_FOR_ADVISORS);\n  }\n\n  ///@notice Mints the below-mentioned amount of tokens allocated to the first Strategic Partnership category.\n  //The tokens are available to the first strategic partners only if the fundraiser was successful.\n  function mintTokensForInitialStrategicPartnerships() external onlyAdmin returns(bool) {\n    require(targetReached, \"Sorry, you can't mint at this time because the target hasn't been reached yet.\");\n\n    return mintOnce(\"initialStrategicPartners\", msg.sender, ALLOCATION_FOR_INITIAL_STRATEGIC_PARTNERSHIPS);\n  }\n\n  ///@notice Mints the below-mentioned amount of tokens allocated to the second Strategic Partnership category.\n  //The tokens are only available to the second strategic partners after 730 days of the ICO end.\n  function mintTokensForStrategicPartnerships() external onlyAdmin returns(bool) {\n    require(targetReached, \"Sorry, you can't mint at this time because the target hasn't been reached yet.\");\n    require(icoEndDate != 0, \"You need to specify the ICO end date before minting the tokens.\");\n    require(now > (icoEndDate + 730 days), \"Access is denied, it's too early to mint the partnership tokens.\");\n\n    return mintOnce(\"strategicPartners\", msg.sender, ALLOCATION_FOR_STRATEGIC_PARTNERSHIPS);\n  }\n\n  ///@notice Computes keccak256 hash of the supplied value.\n  ///@param _key The string value to compute hash from.\n  function computeHash(string _key) private pure returns(bytes32) {\n    return keccak256(abi.encodePacked(_key));\n  }\n\n  ///@notice Mints the tokens only once against the supplied key (category).\n  ///@param _key The key or the category of the allocation to mint the tokens for.\n  ///@param _to The address receiving the minted tokens.\n  ///@param _amount The amount of tokens to mint.\n  function mintOnce(string _key, address _to, uint256 _amount) private whenNotPaused whenNotMinted(_key) returns(bool) {\n    mintTokens(_to, _amount);\n    mintingList[computeHash(_key)] = true;\n    return true;\n  }\n}",
  "sourcePath": "/Users/biod/Desktop/projects/fulcrum-token/contracts/FulcrumToken.sol",
  "ast": {
    "absolutePath": "/Users/biod/Desktop/projects/fulcrum-token/contracts/FulcrumToken.sol",
    "exportedSymbols": {
      "FulcrumToken": [
        662
      ]
    },
    "id": 663,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 306,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "585:24:2"
      },
      {
        "absolutePath": "/Users/biod/Desktop/projects/fulcrum-token/contracts/FulcrumTokenBase.sol",
        "file": "./FulcrumTokenBase.sol",
        "id": 307,
        "nodeType": "ImportDirective",
        "scope": 663,
        "sourceUnit": 1127,
        "src": "611:32:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 308,
              "name": "FulcrumTokenBase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1126,
              "src": "1197:16:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FulcrumTokenBase_$1126",
                "typeString": "contract FulcrumTokenBase"
              }
            },
            "id": 309,
            "nodeType": "InheritanceSpecifier",
            "src": "1197:16:2"
          }
        ],
        "contractDependencies": [
          242,
          304,
          1126,
          1306,
          1402,
          1473,
          1516,
          1548,
          1795
        ],
        "contractKind": "contract",
        "documentation": "@title Fulcrum Token\n@author Binod Nirvan\n@notice The FULC is our native settlements token used across our marketplace, \nand will enable many important functions within the Accept global marketplace including: \nA medium of exchange (settlements) for Accept.io buyers and sellers A consumptive use (utility) token \nfor marketplace users to access premium features in the Accept.io DApp An incentive for users to help \nimprove the Accept Marketplace and contribute to the long-term development of Accept.io",
        "fullyImplemented": true,
        "id": 662,
        "linearizedBaseContracts": [
          662,
          1126,
          1473,
          304,
          242,
          1306,
          1795,
          1402,
          1516,
          1548
        ],
        "name": "FulcrumToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 311,
            "name": "icoEndDate",
            "nodeType": "VariableDeclaration",
            "scope": 662,
            "src": "1301:25:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 310,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1301:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 316,
            "name": "ALLOCATION_FOR_COMMUNITY_REWARDS",
            "nodeType": "VariableDeclaration",
            "scope": 662,
            "src": "1331:71:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 312,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1331:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 315,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "3135",
                "id": 313,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1390:2:2",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_15_by_1",
                  "typeString": "int_const 15"
                },
                "value": "15"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "id": 314,
                "name": "MILLION",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 690,
                "src": "1395:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "1390:12:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 321,
            "name": "ALLOCATION_FOR_RESERVE",
            "nodeType": "VariableDeclaration",
            "scope": 662,
            "src": "1406:61:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 317,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1406:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 320,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "3137",
                "id": 318,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1455:2:2",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_17_by_1",
                  "typeString": "int_const 17"
                },
                "value": "17"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "id": 319,
                "name": "MILLION",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 690,
                "src": "1460:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "1455:12:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 326,
            "name": "ALLOCATION_FOR_TEAM",
            "nodeType": "VariableDeclaration",
            "scope": 662,
            "src": "1471:58:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 322,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1471:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 325,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "3430",
                "id": 323,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1517:2:2",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_40_by_1",
                  "typeString": "int_const 40"
                },
                "value": "40"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "id": 324,
                "name": "MILLION",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 690,
                "src": "1522:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "1517:12:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 331,
            "name": "ALLOCATION_FOR_ADVISORS",
            "nodeType": "VariableDeclaration",
            "scope": 662,
            "src": "1533:61:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 327,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1533:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 330,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "38",
                "id": 328,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1583:1:2",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_8_by_1",
                  "typeString": "int_const 8"
                },
                "value": "8"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "id": 329,
                "name": "MILLION",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 690,
                "src": "1587:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "1583:11:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 336,
            "name": "ALLOCATION_FOR_INITIAL_STRATEGIC_PARTNERSHIPS",
            "nodeType": "VariableDeclaration",
            "scope": 662,
            "src": "1598:84:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 332,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1598:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 335,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "3130",
                "id": 333,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1670:2:2",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "id": 334,
                "name": "MILLION",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 690,
                "src": "1675:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "1670:12:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 341,
            "name": "ALLOCATION_FOR_STRATEGIC_PARTNERSHIPS",
            "nodeType": "VariableDeclaration",
            "scope": 662,
            "src": "1686:76:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 337,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1686:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 340,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "3130",
                "id": 338,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1750:2:2",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "id": 339,
                "name": "MILLION",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 690,
                "src": "1755:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "1750:12:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 344,
            "name": "targetReached",
            "nodeType": "VariableDeclaration",
            "scope": 662,
            "src": "1767:33:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 342,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1767:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 343,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1795:5:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 348,
            "name": "mintingList",
            "nodeType": "VariableDeclaration",
            "scope": 662,
            "src": "1805:44:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 347,
              "keyType": {
                "id": 345,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1813:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1805:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 346,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1824:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 352,
            "name": "ICOEndDateSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 351,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 350,
                  "indexed": false,
                  "name": "_date",
                  "nodeType": "VariableDeclaration",
                  "scope": 352,
                  "src": "1874:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 349,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1874:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1873:15:2"
            },
            "src": "1854:35:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 354,
            "name": "TargetReached",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 353,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1911:2:2"
            },
            "src": "1892:22:2"
          },
          {
            "body": {
              "id": 370,
              "nodeType": "Block",
              "src": "2087:109:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 358,
                      "name": "mintingList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 348,
                      "src": "2096:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                        "typeString": "mapping(bytes32 => bool)"
                      }
                    },
                    "id": 362,
                    "indexExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 360,
                          "name": "_key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 356,
                          "src": "2120:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 359,
                        "name": "computeHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 629,
                        "src": "2108:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (string memory) pure returns (bytes32)"
                        }
                      },
                      "id": 361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2108:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2096:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 368,
                  "nodeType": "IfStatement",
                  "src": "2093:91:2",
                  "trueBody": {
                    "id": 367,
                    "nodeType": "Block",
                    "src": "2128:56:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4475706c6963617465206d696e74696e67206b657920737570706c6965642e",
                              "id": 364,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2143:33:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6b2dc297adf1f97e2a2bb3bff75e1861d3ea1f58bb590ffb2adf64cb1fa5f998",
                                "typeString": "literal_string \"Duplicate minting key supplied.\""
                              },
                              "value": "Duplicate minting key supplied."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_6b2dc297adf1f97e2a2bb3bff75e1861d3ea1f58bb590ffb2adf64cb1fa5f998",
                                "typeString": "literal_string \"Duplicate minting key supplied.\""
                              }
                            ],
                            "id": 363,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1815,
                              1816
                            ],
                            "referencedDeclaration": 1816,
                            "src": "2136:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2136:41:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 366,
                        "nodeType": "ExpressionStatement",
                        "src": "2136:41:2"
                      }
                    ]
                  }
                },
                {
                  "id": 369,
                  "nodeType": "PlaceholderStatement",
                  "src": "2190:1:2"
                }
              ]
            },
            "documentation": "@notice Checks if the minting for the supplied key was already performed.\n@param _key The key or category name of minting.",
            "id": 371,
            "name": "whenNotMinted",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 356,
                  "name": "_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 371,
                  "src": "2074:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 355,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2074:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2073:13:2"
            },
            "src": "2051:145:2",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 391,
              "nodeType": "Block",
              "src": "2389:108:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2403:14:2",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 379,
                          "name": "targetReached",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 344,
                          "src": "2404:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4163636573732069732064656e6965642e",
                        "id": 381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2419:19:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_11c0ab04dd8767b2a12ae9a3907ed0ff3885e735e22396731fac2129e6c9554f",
                          "typeString": "literal_string \"Access is denied.\""
                        },
                        "value": "Access is denied."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_11c0ab04dd8767b2a12ae9a3907ed0ff3885e735e22396731fac2129e6c9554f",
                          "typeString": "literal_string \"Access is denied.\""
                        }
                      ],
                      "id": 378,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1813,
                        1814
                      ],
                      "referencedDeclaration": 1814,
                      "src": "2395:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2395:44:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 383,
                  "nodeType": "ExpressionStatement",
                  "src": "2395:44:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 384,
                      "name": "targetReached",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 344,
                      "src": "2445:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2461:4:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2445:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 387,
                  "nodeType": "ExpressionStatement",
                  "src": "2445:20:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 388,
                      "name": "TargetReached",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 354,
                      "src": "2477:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2477:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 390,
                  "nodeType": "EmitStatement",
                  "src": "2472:20:2"
                }
              ]
            },
            "documentation": "@notice This function signifies that the minimum fundraising target was met.\nPlease note that this can only be called once.",
            "id": 392,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 374,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 373,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 28,
                  "src": "2365:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2365:9:2"
              }
            ],
            "name": "setSuccess",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 372,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2353:2:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 377,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 376,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 392,
                  "src": "2383:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 375,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2383:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2382:6:2"
            },
            "scope": 662,
            "src": "2334:163:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 425,
              "nodeType": "Block",
              "src": "2768:219:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 402,
                          "name": "icoEndDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 311,
                          "src": "2782:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2796:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2782:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652049434f20656e6420646174652077617320616c7265616479207365742e",
                        "id": 405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2799:35:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d925e4eb52463912b0564a931e020b383b0b958e0a95b25097ab9fea3197dd12",
                          "typeString": "literal_string \"The ICO end date was already set.\""
                        },
                        "value": "The ICO end date was already set."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d925e4eb52463912b0564a931e020b383b0b958e0a95b25097ab9fea3197dd12",
                          "typeString": "literal_string \"The ICO end date was already set.\""
                        }
                      ],
                      "id": 401,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1813,
                        1814
                      ],
                      "referencedDeclaration": 1814,
                      "src": "2774:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2774:61:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 407,
                  "nodeType": "ExpressionStatement",
                  "src": "2774:61:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 409,
                          "name": "_date",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 394,
                          "src": "2849:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 410,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1812,
                          "src": "2857:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2849:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652049434f20656e642064617465206d75737420626520696e20746865206675747572652e",
                        "id": 412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2862:41:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0ef38138bf52db838762be170a1f6c0a62e46ff005e0546c9de28478001a24de",
                          "typeString": "literal_string \"The ICO end date must be in the future.\""
                        },
                        "value": "The ICO end date must be in the future."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0ef38138bf52db838762be170a1f6c0a62e46ff005e0546c9de28478001a24de",
                          "typeString": "literal_string \"The ICO end date must be in the future.\""
                        }
                      ],
                      "id": 408,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1813,
                        1814
                      ],
                      "referencedDeclaration": 1814,
                      "src": "2841:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2841:63:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 414,
                  "nodeType": "ExpressionStatement",
                  "src": "2841:63:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 415,
                      "name": "icoEndDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 311,
                      "src": "2911:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 416,
                      "name": "_date",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 394,
                      "src": "2924:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2911:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 418,
                  "nodeType": "ExpressionStatement",
                  "src": "2911:18:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 420,
                        "name": "_date",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 394,
                        "src": "2959:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 419,
                      "name": "ICOEndDateSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 352,
                      "src": "2945:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2945:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 422,
                  "nodeType": "EmitStatement",
                  "src": "2940:25:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2978:4:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 400,
                  "id": 424,
                  "nodeType": "Return",
                  "src": "2971:11:2"
                }
              ]
            },
            "documentation": "@notice This function enables the whitelisted application (internal application) to set the \n ICO end date and can only be used once.\n@param _date The date to set as the ICO end date.",
            "id": 426,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 397,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 396,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 28,
                  "src": "2744:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2744:9:2"
              }
            ],
            "name": "setICOEndDate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 394,
                  "name": "_date",
                  "nodeType": "VariableDeclaration",
                  "scope": 426,
                  "src": "2723:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 393,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2723:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2722:12:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 399,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 426,
                  "src": "2762:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 398,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2762:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2761:6:2"
            },
            "scope": 662,
            "src": "2700:287:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 445,
              "nodeType": "Block",
              "src": "3253:203:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 434,
                        "name": "targetReached",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 344,
                        "src": "3267:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f7272792c20796f752063616e2774206d696e7420617420746869732074696d6520626563617573652074686520746172676574206861736e2774206265656e2072656163686564207965742e",
                        "id": 435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3282:80:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e52eda7628a73ebd1b97558619a74ccfca964dae647fc1e6727dfec86364a29a",
                          "typeString": "literal_string \"Sorry, you can't mint at this time because the target hasn't been reached yet.\""
                        },
                        "value": "Sorry, you can't mint at this time because the target hasn't been reached yet."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e52eda7628a73ebd1b97558619a74ccfca964dae647fc1e6727dfec86364a29a",
                          "typeString": "literal_string \"Sorry, you can't mint at this time because the target hasn't been reached yet.\""
                        }
                      ],
                      "id": 433,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1813,
                        1814
                      ],
                      "referencedDeclaration": 1814,
                      "src": "3259:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3259:104:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 437,
                  "nodeType": "ExpressionStatement",
                  "src": "3259:104:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "636f6d6d756e69747952657761726473",
                        "id": 439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3386:18:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ed06113fb92c703094a15391c001fd5f947fe7d327395303ffa4a9a09510e0f",
                          "typeString": "literal_string \"communityRewards\""
                        },
                        "value": "communityRewards"
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 440,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1810,
                          "src": "3406:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3406:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 442,
                        "name": "ALLOCATION_FOR_COMMUNITY_REWARDS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 316,
                        "src": "3418:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2ed06113fb92c703094a15391c001fd5f947fe7d327395303ffa4a9a09510e0f",
                          "typeString": "literal_string \"communityRewards\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 438,
                      "name": "mintOnce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 661,
                      "src": "3377:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (string memory,address,uint256) returns (bool)"
                      }
                    },
                    "id": 443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3377:74:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 432,
                  "id": 444,
                  "nodeType": "Return",
                  "src": "3370:81:2"
                }
              ]
            },
            "documentation": "@notice Mints the below-mentioned amount of tokens allocated to rewarding the community.",
            "id": 446,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 429,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 428,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 28,
                  "src": "3229:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3229:9:2"
              }
            ],
            "name": "mintCommunityRewardTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 427,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3217:2:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 431,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 446,
                  "src": "3247:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 430,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3247:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3246:6:2"
            },
            "scope": 662,
            "src": "3183:273:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 482,
              "nodeType": "Block",
              "src": "3699:400:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 454,
                        "name": "targetReached",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 344,
                        "src": "3713:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f7272792c20796f752063616e2774206d696e7420617420746869732074696d6520626563617573652074686520746172676574206861736e2774206265656e2072656163686564207965742e",
                        "id": 455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3728:80:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e52eda7628a73ebd1b97558619a74ccfca964dae647fc1e6727dfec86364a29a",
                          "typeString": "literal_string \"Sorry, you can't mint at this time because the target hasn't been reached yet.\""
                        },
                        "value": "Sorry, you can't mint at this time because the target hasn't been reached yet."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e52eda7628a73ebd1b97558619a74ccfca964dae647fc1e6727dfec86364a29a",
                          "typeString": "literal_string \"Sorry, you can't mint at this time because the target hasn't been reached yet.\""
                        }
                      ],
                      "id": 453,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1813,
                        1814
                      ],
                      "referencedDeclaration": 1814,
                      "src": "3705:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3705:104:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 457,
                  "nodeType": "ExpressionStatement",
                  "src": "3705:104:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 459,
                          "name": "icoEndDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 311,
                          "src": "3823:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3837:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3823:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f75206e65656420746f2073706563696679207468652049434f20656e642064617465206265666f7265206d696e74696e672074686520746f6b656e732e",
                        "id": 462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3840:65:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ccedbab8ae1f92030914af901b345ceaf7187b9699858c1369a74d4e740ae3ac",
                          "typeString": "literal_string \"You need to specify the ICO end date before minting the tokens.\""
                        },
                        "value": "You need to specify the ICO end date before minting the tokens."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ccedbab8ae1f92030914af901b345ceaf7187b9699858c1369a74d4e740ae3ac",
                          "typeString": "literal_string \"You need to specify the ICO end date before minting the tokens.\""
                        }
                      ],
                      "id": 458,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1813,
                        1814
                      ],
                      "referencedDeclaration": 1814,
                      "src": "3815:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3815:91:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 464,
                  "nodeType": "ExpressionStatement",
                  "src": "3815:91:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 466,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1812,
                          "src": "3920:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 469,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 467,
                                "name": "icoEndDate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 311,
                                "src": "3927:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "353438",
                                "id": 468,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3940:8:2",
                                "subdenomination": "days",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_47347200_by_1",
                                  "typeString": "int_const 47347200"
                                },
                                "value": "548"
                              },
                              "src": "3927:21:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 470,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "3926:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3920:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4163636573732069732064656e6965642c206974277320746f6f206561726c7920746f206d696e7420746865207265736572766520746f6b656e732e",
                        "id": 472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3951:62:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_07147f853b40cf0a30f6fb18b673e4e9e98e7095cd3944ec8a664b59352faea0",
                          "typeString": "literal_string \"Access is denied, it's too early to mint the reserve tokens.\""
                        },
                        "value": "Access is denied, it's too early to mint the reserve tokens."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_07147f853b40cf0a30f6fb18b673e4e9e98e7095cd3944ec8a664b59352faea0",
                          "typeString": "literal_string \"Access is denied, it's too early to mint the reserve tokens.\""
                        }
                      ],
                      "id": 465,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1813,
                        1814
                      ],
                      "referencedDeclaration": 1814,
                      "src": "3912:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3912:102:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 474,
                  "nodeType": "ExpressionStatement",
                  "src": "3912:102:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "6f7065726174696f6e616c52657365727665",
                        "id": 476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4037:20:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a7beff801e5b262513119eb0fd45d42774c16f2cfb679ded94853bc6daf9360",
                          "typeString": "literal_string \"operationalReserve\""
                        },
                        "value": "operationalReserve"
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 477,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1810,
                          "src": "4059:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4059:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 479,
                        "name": "ALLOCATION_FOR_RESERVE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 321,
                        "src": "4071:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_6a7beff801e5b262513119eb0fd45d42774c16f2cfb679ded94853bc6daf9360",
                          "typeString": "literal_string \"operationalReserve\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 475,
                      "name": "mintOnce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 661,
                      "src": "4028:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (string memory,address,uint256) returns (bool)"
                      }
                    },
                    "id": 480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4028:66:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 452,
                  "id": 481,
                  "nodeType": "Return",
                  "src": "4021:73:2"
                }
              ]
            },
            "documentation": "@notice Mints the below-mentioned amount of tokens allocated to the operational reserves.",
            "id": 483,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 449,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 448,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 28,
                  "src": "3675:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3675:9:2"
              }
            ],
            "name": "mintReserveTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 447,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3663:2:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 452,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 451,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 483,
                  "src": "3693:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 450,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3693:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3692:6:2"
            },
            "scope": 662,
            "src": "3637:462:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 519,
              "nodeType": "Block",
              "src": "4337:376:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 491,
                        "name": "targetReached",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 344,
                        "src": "4351:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f7272792c20796f752063616e2774206d696e7420617420746869732074696d6520626563617573652074686520746172676574206861736e2774206265656e2072656163686564207965742e",
                        "id": 492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4366:80:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e52eda7628a73ebd1b97558619a74ccfca964dae647fc1e6727dfec86364a29a",
                          "typeString": "literal_string \"Sorry, you can't mint at this time because the target hasn't been reached yet.\""
                        },
                        "value": "Sorry, you can't mint at this time because the target hasn't been reached yet."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e52eda7628a73ebd1b97558619a74ccfca964dae647fc1e6727dfec86364a29a",
                          "typeString": "literal_string \"Sorry, you can't mint at this time because the target hasn't been reached yet.\""
                        }
                      ],
                      "id": 490,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1813,
                        1814
                      ],
                      "referencedDeclaration": 1814,
                      "src": "4343:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4343:104:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 494,
                  "nodeType": "ExpressionStatement",
                  "src": "4343:104:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 496,
                          "name": "icoEndDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 311,
                          "src": "4461:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4475:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4461:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f75206e65656420746f2073706563696679207468652049434f20656e642064617465206265666f7265206d696e74696e672074686520746f6b656e732e",
                        "id": 499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4478:65:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ccedbab8ae1f92030914af901b345ceaf7187b9699858c1369a74d4e740ae3ac",
                          "typeString": "literal_string \"You need to specify the ICO end date before minting the tokens.\""
                        },
                        "value": "You need to specify the ICO end date before minting the tokens."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ccedbab8ae1f92030914af901b345ceaf7187b9699858c1369a74d4e740ae3ac",
                          "typeString": "literal_string \"You need to specify the ICO end date before minting the tokens.\""
                        }
                      ],
                      "id": 495,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1813,
                        1814
                      ],
                      "referencedDeclaration": 1814,
                      "src": "4453:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4453:91:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 501,
                  "nodeType": "ExpressionStatement",
                  "src": "4453:91:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 503,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1812,
                          "src": "4558:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 506,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 504,
                                "name": "icoEndDate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 311,
                                "src": "4565:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "373330",
                                "id": 505,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4578:8:2",
                                "subdenomination": "days",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_63072000_by_1",
                                  "typeString": "int_const 63072000"
                                },
                                "value": "730"
                              },
                              "src": "4565:21:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 507,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4564:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4558:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4163636573732069732064656e6965642c206974277320746f6f206561726c7920746f206d696e74207465616d20746f6b656e732e",
                        "id": 509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4589:55:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ddb842bf1fc57e02f42408adc42f28baad9b48ad85fa207276f4e7dea68536b",
                          "typeString": "literal_string \"Access is denied, it's too early to mint team tokens.\""
                        },
                        "value": "Access is denied, it's too early to mint team tokens."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8ddb842bf1fc57e02f42408adc42f28baad9b48ad85fa207276f4e7dea68536b",
                          "typeString": "literal_string \"Access is denied, it's too early to mint team tokens.\""
                        }
                      ],
                      "id": 502,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1813,
                        1814
                      ],
                      "referencedDeclaration": 1814,
                      "src": "4550:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4550:95:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 511,
                  "nodeType": "ExpressionStatement",
                  "src": "4550:95:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "7465616d",
                        "id": 513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4668:6:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e1dfd0dbf63767a45b3f20993b337a1eef2b19b117cd799475c77d789e43b92d",
                          "typeString": "literal_string \"team\""
                        },
                        "value": "team"
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 514,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1810,
                          "src": "4676:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4676:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 516,
                        "name": "ALLOCATION_FOR_TEAM",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 326,
                        "src": "4688:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e1dfd0dbf63767a45b3f20993b337a1eef2b19b117cd799475c77d789e43b92d",
                          "typeString": "literal_string \"team\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 512,
                      "name": "mintOnce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 661,
                      "src": "4659:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (string memory,address,uint256) returns (bool)"
                      }
                    },
                    "id": 517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4659:49:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 489,
                  "id": 518,
                  "nodeType": "Return",
                  "src": "4652:56:2"
                }
              ]
            },
            "documentation": "@notice Mints the below-mentioned amount of tokens allocated to the Accept.io founders.",
            "id": 520,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 486,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 485,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 28,
                  "src": "4313:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4313:9:2"
              }
            ],
            "name": "mintTokensForTeam",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 484,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4301:2:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 489,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 488,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 520,
                  "src": "4331:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 487,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4331:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4330:6:2"
            },
            "scope": 662,
            "src": "4275:438:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 556,
              "nodeType": "Block",
              "src": "4955:388:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 528,
                        "name": "targetReached",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 344,
                        "src": "4969:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f7272792c20796f752063616e2774206d696e7420617420746869732074696d6520626563617573652074686520746172676574206861736e2774206265656e2072656163686564207965742e",
                        "id": 529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4984:80:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e52eda7628a73ebd1b97558619a74ccfca964dae647fc1e6727dfec86364a29a",
                          "typeString": "literal_string \"Sorry, you can't mint at this time because the target hasn't been reached yet.\""
                        },
                        "value": "Sorry, you can't mint at this time because the target hasn't been reached yet."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e52eda7628a73ebd1b97558619a74ccfca964dae647fc1e6727dfec86364a29a",
                          "typeString": "literal_string \"Sorry, you can't mint at this time because the target hasn't been reached yet.\""
                        }
                      ],
                      "id": 527,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1813,
                        1814
                      ],
                      "referencedDeclaration": 1814,
                      "src": "4961:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4961:104:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 531,
                  "nodeType": "ExpressionStatement",
                  "src": "4961:104:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 533,
                          "name": "icoEndDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 311,
                          "src": "5079:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5093:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5079:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f75206e65656420746f2073706563696679207468652049434f20656e642064617465206265666f7265206d696e74696e672074686520746f6b656e732e",
                        "id": 536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5096:65:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ccedbab8ae1f92030914af901b345ceaf7187b9699858c1369a74d4e740ae3ac",
                          "typeString": "literal_string \"You need to specify the ICO end date before minting the tokens.\""
                        },
                        "value": "You need to specify the ICO end date before minting the tokens."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ccedbab8ae1f92030914af901b345ceaf7187b9699858c1369a74d4e740ae3ac",
                          "typeString": "literal_string \"You need to specify the ICO end date before minting the tokens.\""
                        }
                      ],
                      "id": 532,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1813,
                        1814
                      ],
                      "referencedDeclaration": 1814,
                      "src": "5071:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5071:91:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 538,
                  "nodeType": "ExpressionStatement",
                  "src": "5071:91:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 540,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1812,
                          "src": "5176:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 543,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 541,
                                "name": "icoEndDate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 311,
                                "src": "5183:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "333635",
                                "id": 542,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5196:8:2",
                                "subdenomination": "days",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_31536000_by_1",
                                  "typeString": "int_const 31536000"
                                },
                                "value": "365"
                              },
                              "src": "5183:21:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 544,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5182:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5176:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4163636573732069732064656e6965642c206974277320746f6f206561726c7920746f206d696e742061647669736f727920746f6b656e732e",
                        "id": 546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5207:59:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_140daa579ef5cb8fcfbcf4e424d65315e339c51df6643aa00f7282c7a03500e8",
                          "typeString": "literal_string \"Access is denied, it's too early to mint advisory tokens.\""
                        },
                        "value": "Access is denied, it's too early to mint advisory tokens."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_140daa579ef5cb8fcfbcf4e424d65315e339c51df6643aa00f7282c7a03500e8",
                          "typeString": "literal_string \"Access is denied, it's too early to mint advisory tokens.\""
                        }
                      ],
                      "id": 539,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1813,
                        1814
                      ],
                      "referencedDeclaration": 1814,
                      "src": "5168:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5168:99:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 548,
                  "nodeType": "ExpressionStatement",
                  "src": "5168:99:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "61647669736f7273",
                        "id": 550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5290:10:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_55dd4831c641a357bde804ce3776fc6c25300fb5dc40326f45eca70072e7f407",
                          "typeString": "literal_string \"advisors\""
                        },
                        "value": "advisors"
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 551,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1810,
                          "src": "5302:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5302:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 553,
                        "name": "ALLOCATION_FOR_ADVISORS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 331,
                        "src": "5314:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_55dd4831c641a357bde804ce3776fc6c25300fb5dc40326f45eca70072e7f407",
                          "typeString": "literal_string \"advisors\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 549,
                      "name": "mintOnce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 661,
                      "src": "5281:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (string memory,address,uint256) returns (bool)"
                      }
                    },
                    "id": 554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5281:57:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 526,
                  "id": 555,
                  "nodeType": "Return",
                  "src": "5274:64:2"
                }
              ]
            },
            "documentation": "@notice Mints the below-mentioned amount of tokens allocated to the Accept.io advisors.",
            "id": 557,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 523,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 522,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 28,
                  "src": "4931:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4931:9:2"
              }
            ],
            "name": "mintTokensForAdvisors",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 521,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4919:2:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 525,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 557,
                  "src": "4949:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 524,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4949:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4948:6:2"
            },
            "scope": 662,
            "src": "4889:454:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 576,
              "nodeType": "Block",
              "src": "5644:224:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 565,
                        "name": "targetReached",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 344,
                        "src": "5658:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f7272792c20796f752063616e2774206d696e7420617420746869732074696d6520626563617573652074686520746172676574206861736e2774206265656e2072656163686564207965742e",
                        "id": 566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5673:80:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e52eda7628a73ebd1b97558619a74ccfca964dae647fc1e6727dfec86364a29a",
                          "typeString": "literal_string \"Sorry, you can't mint at this time because the target hasn't been reached yet.\""
                        },
                        "value": "Sorry, you can't mint at this time because the target hasn't been reached yet."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e52eda7628a73ebd1b97558619a74ccfca964dae647fc1e6727dfec86364a29a",
                          "typeString": "literal_string \"Sorry, you can't mint at this time because the target hasn't been reached yet.\""
                        }
                      ],
                      "id": 564,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1813,
                        1814
                      ],
                      "referencedDeclaration": 1814,
                      "src": "5650:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5650:104:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 568,
                  "nodeType": "ExpressionStatement",
                  "src": "5650:104:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "696e697469616c537472617465676963506172746e657273",
                        "id": 570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5777:26:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8005d96712946b46f9596742639235ac7800f72805061cf3a22e544d1605e5a4",
                          "typeString": "literal_string \"initialStrategicPartners\""
                        },
                        "value": "initialStrategicPartners"
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 571,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1810,
                          "src": "5805:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5805:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 573,
                        "name": "ALLOCATION_FOR_INITIAL_STRATEGIC_PARTNERSHIPS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 336,
                        "src": "5817:45:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8005d96712946b46f9596742639235ac7800f72805061cf3a22e544d1605e5a4",
                          "typeString": "literal_string \"initialStrategicPartners\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 569,
                      "name": "mintOnce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 661,
                      "src": "5768:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (string memory,address,uint256) returns (bool)"
                      }
                    },
                    "id": 574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5768:95:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 563,
                  "id": 575,
                  "nodeType": "Return",
                  "src": "5761:102:2"
                }
              ]
            },
            "documentation": "@notice Mints the below-mentioned amount of tokens allocated to the first Strategic Partnership category.",
            "id": 577,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 560,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 559,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 28,
                  "src": "5620:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5620:9:2"
              }
            ],
            "name": "mintTokensForInitialStrategicPartnerships",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 558,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5608:2:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 563,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 562,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 577,
                  "src": "5638:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 561,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5638:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5637:6:2"
            },
            "scope": 662,
            "src": "5558:310:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 613,
              "nodeType": "Block",
              "src": "6161:418:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 585,
                        "name": "targetReached",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 344,
                        "src": "6175:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f7272792c20796f752063616e2774206d696e7420617420746869732074696d6520626563617573652074686520746172676574206861736e2774206265656e2072656163686564207965742e",
                        "id": 586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6190:80:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e52eda7628a73ebd1b97558619a74ccfca964dae647fc1e6727dfec86364a29a",
                          "typeString": "literal_string \"Sorry, you can't mint at this time because the target hasn't been reached yet.\""
                        },
                        "value": "Sorry, you can't mint at this time because the target hasn't been reached yet."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e52eda7628a73ebd1b97558619a74ccfca964dae647fc1e6727dfec86364a29a",
                          "typeString": "literal_string \"Sorry, you can't mint at this time because the target hasn't been reached yet.\""
                        }
                      ],
                      "id": 584,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1813,
                        1814
                      ],
                      "referencedDeclaration": 1814,
                      "src": "6167:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6167:104:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 588,
                  "nodeType": "ExpressionStatement",
                  "src": "6167:104:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 590,
                          "name": "icoEndDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 311,
                          "src": "6285:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6299:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6285:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f75206e65656420746f2073706563696679207468652049434f20656e642064617465206265666f7265206d696e74696e672074686520746f6b656e732e",
                        "id": 593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6302:65:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ccedbab8ae1f92030914af901b345ceaf7187b9699858c1369a74d4e740ae3ac",
                          "typeString": "literal_string \"You need to specify the ICO end date before minting the tokens.\""
                        },
                        "value": "You need to specify the ICO end date before minting the tokens."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ccedbab8ae1f92030914af901b345ceaf7187b9699858c1369a74d4e740ae3ac",
                          "typeString": "literal_string \"You need to specify the ICO end date before minting the tokens.\""
                        }
                      ],
                      "id": 589,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1813,
                        1814
                      ],
                      "referencedDeclaration": 1814,
                      "src": "6277:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6277:91:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 595,
                  "nodeType": "ExpressionStatement",
                  "src": "6277:91:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 597,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1812,
                          "src": "6382:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 600,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 598,
                                "name": "icoEndDate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 311,
                                "src": "6389:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "373330",
                                "id": 599,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6402:8:2",
                                "subdenomination": "days",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_63072000_by_1",
                                  "typeString": "int_const 63072000"
                                },
                                "value": "730"
                              },
                              "src": "6389:21:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 601,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6388:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6382:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4163636573732069732064656e6965642c206974277320746f6f206561726c7920746f206d696e742074686520706172746e65727368697020746f6b656e732e",
                        "id": 603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6413:66:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_318786f5296cbfa358305845cf37730cc559f1e75e841aa03ad09ffbc8ef339c",
                          "typeString": "literal_string \"Access is denied, it's too early to mint the partnership tokens.\""
                        },
                        "value": "Access is denied, it's too early to mint the partnership tokens."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_318786f5296cbfa358305845cf37730cc559f1e75e841aa03ad09ffbc8ef339c",
                          "typeString": "literal_string \"Access is denied, it's too early to mint the partnership tokens.\""
                        }
                      ],
                      "id": 596,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1813,
                        1814
                      ],
                      "referencedDeclaration": 1814,
                      "src": "6374:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6374:106:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 605,
                  "nodeType": "ExpressionStatement",
                  "src": "6374:106:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "737472617465676963506172746e657273",
                        "id": 607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6503:19:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1c1c5562d45e83d7ae712234df90774f358336d0437b5c67c74e06aef6d330d1",
                          "typeString": "literal_string \"strategicPartners\""
                        },
                        "value": "strategicPartners"
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 608,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1810,
                          "src": "6524:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6524:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 610,
                        "name": "ALLOCATION_FOR_STRATEGIC_PARTNERSHIPS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "6536:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1c1c5562d45e83d7ae712234df90774f358336d0437b5c67c74e06aef6d330d1",
                          "typeString": "literal_string \"strategicPartners\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 606,
                      "name": "mintOnce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 661,
                      "src": "6494:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (string memory,address,uint256) returns (bool)"
                      }
                    },
                    "id": 611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6494:80:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 583,
                  "id": 612,
                  "nodeType": "Return",
                  "src": "6487:87:2"
                }
              ]
            },
            "documentation": "@notice Mints the below-mentioned amount of tokens allocated to the second Strategic Partnership category.",
            "id": 614,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 580,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 579,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 28,
                  "src": "6137:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6137:9:2"
              }
            ],
            "name": "mintTokensForStrategicPartnerships",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 578,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6125:2:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 583,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 582,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 614,
                  "src": "6155:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 581,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6155:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6154:6:2"
            },
            "scope": 662,
            "src": "6082:497:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 628,
              "nodeType": "Block",
              "src": "6763:51:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 624,
                            "name": "_key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 616,
                            "src": "6803:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 622,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1797,
                            "src": "6786:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "6786:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6786:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 621,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1804,
                      "src": "6776:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                        "typeString": "function () pure returns (bytes32)"
                      }
                    },
                    "id": 626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6776:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 620,
                  "id": 627,
                  "nodeType": "Return",
                  "src": "6769:40:2"
                }
              ]
            },
            "documentation": "@notice Computes keccak256 hash of the supplied value.\n@param _key The string value to compute hash from.",
            "id": 629,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "computeHash",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 616,
                  "name": "_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 629,
                  "src": "6720:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 615,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6720:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6719:13:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 620,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 619,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 629,
                  "src": "6754:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 618,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6754:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6753:9:2"
            },
            "scope": 662,
            "src": "6699:115:2",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 660,
              "nodeType": "Block",
              "src": "7202:95:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 646,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 633,
                        "src": "7219:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 647,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 635,
                        "src": "7224:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 645,
                      "name": "mintTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1088,
                      "src": "7208:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7208:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 649,
                  "nodeType": "ExpressionStatement",
                  "src": "7208:24:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 650,
                        "name": "mintingList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 348,
                        "src": "7238:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 654,
                      "indexExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 652,
                            "name": "_key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 631,
                            "src": "7262:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 651,
                          "name": "computeHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 629,
                          "src": "7250:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (string memory) pure returns (bytes32)"
                          }
                        },
                        "id": 653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7250:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7238:30:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7271:4:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "7238:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 657,
                  "nodeType": "ExpressionStatement",
                  "src": "7238:37:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7288:4:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 644,
                  "id": 659,
                  "nodeType": "Return",
                  "src": "7281:11:2"
                }
              ]
            },
            "documentation": "@notice Mints the tokens only once against the supplied key (category).\n@param _key The key or the category of the allocation to mint the tokens for.\n@param _to The address receiving the minted tokens.\n@param _amount The amount of tokens to mint.",
            "id": 661,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 638,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 637,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 264,
                  "src": "7154:13:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7154:13:2"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 640,
                    "name": "_key",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 631,
                    "src": "7182:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 641,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 639,
                  "name": "whenNotMinted",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 371,
                  "src": "7168:13:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_string_memory_ptr_$",
                    "typeString": "modifier (string memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7168:19:2"
              }
            ],
            "name": "mintOnce",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 636,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 631,
                  "name": "_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 661,
                  "src": "7103:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 630,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7103:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 633,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 661,
                  "src": "7116:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 632,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7116:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 635,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 661,
                  "src": "7129:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 634,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7129:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7102:43:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 644,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 643,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 661,
                  "src": "7196:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 642,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7196:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7195:6:2"
            },
            "scope": 662,
            "src": "7085:212:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          }
        ],
        "scope": 663,
        "src": "1172:6127:2"
      }
    ],
    "src": "585:6714:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/biod/Desktop/projects/fulcrum-token/contracts/FulcrumToken.sol",
    "exportedSymbols": {
      "FulcrumToken": [
        662
      ]
    },
    "id": 663,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 306,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "585:24:2"
      },
      {
        "absolutePath": "/Users/biod/Desktop/projects/fulcrum-token/contracts/FulcrumTokenBase.sol",
        "file": "./FulcrumTokenBase.sol",
        "id": 307,
        "nodeType": "ImportDirective",
        "scope": 663,
        "sourceUnit": 1127,
        "src": "611:32:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 308,
              "name": "FulcrumTokenBase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1126,
              "src": "1197:16:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FulcrumTokenBase_$1126",
                "typeString": "contract FulcrumTokenBase"
              }
            },
            "id": 309,
            "nodeType": "InheritanceSpecifier",
            "src": "1197:16:2"
          }
        ],
        "contractDependencies": [
          242,
          304,
          1126,
          1306,
          1402,
          1473,
          1516,
          1548,
          1795
        ],
        "contractKind": "contract",
        "documentation": "@title Fulcrum Token\n@author Binod Nirvan\n@notice The FULC is our native settlements token used across our marketplace, \nand will enable many important functions within the Accept global marketplace including: \nA medium of exchange (settlements) for Accept.io buyers and sellers A consumptive use (utility) token \nfor marketplace users to access premium features in the Accept.io DApp An incentive for users to help \nimprove the Accept Marketplace and contribute to the long-term development of Accept.io",
        "fullyImplemented": true,
        "id": 662,
        "linearizedBaseContracts": [
          662,
          1126,
          1473,
          304,
          242,
          1306,
          1795,
          1402,
          1516,
          1548
        ],
        "name": "FulcrumToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 311,
            "name": "icoEndDate",
            "nodeType": "VariableDeclaration",
            "scope": 662,
            "src": "1301:25:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 310,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1301:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 316,
            "name": "ALLOCATION_FOR_COMMUNITY_REWARDS",
            "nodeType": "VariableDeclaration",
            "scope": 662,
            "src": "1331:71:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 312,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1331:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 315,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "3135",
                "id": 313,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1390:2:2",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_15_by_1",
                  "typeString": "int_const 15"
                },
                "value": "15"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "id": 314,
                "name": "MILLION",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 690,
                "src": "1395:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "1390:12:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 321,
            "name": "ALLOCATION_FOR_RESERVE",
            "nodeType": "VariableDeclaration",
            "scope": 662,
            "src": "1406:61:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 317,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1406:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 320,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "3137",
                "id": 318,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1455:2:2",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_17_by_1",
                  "typeString": "int_const 17"
                },
                "value": "17"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "id": 319,
                "name": "MILLION",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 690,
                "src": "1460:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "1455:12:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 326,
            "name": "ALLOCATION_FOR_TEAM",
            "nodeType": "VariableDeclaration",
            "scope": 662,
            "src": "1471:58:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 322,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1471:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 325,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "3430",
                "id": 323,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1517:2:2",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_40_by_1",
                  "typeString": "int_const 40"
                },
                "value": "40"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "id": 324,
                "name": "MILLION",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 690,
                "src": "1522:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "1517:12:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 331,
            "name": "ALLOCATION_FOR_ADVISORS",
            "nodeType": "VariableDeclaration",
            "scope": 662,
            "src": "1533:61:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 327,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1533:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 330,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "38",
                "id": 328,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1583:1:2",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_8_by_1",
                  "typeString": "int_const 8"
                },
                "value": "8"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "id": 329,
                "name": "MILLION",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 690,
                "src": "1587:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "1583:11:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 336,
            "name": "ALLOCATION_FOR_INITIAL_STRATEGIC_PARTNERSHIPS",
            "nodeType": "VariableDeclaration",
            "scope": 662,
            "src": "1598:84:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 332,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1598:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 335,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "3130",
                "id": 333,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1670:2:2",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "id": 334,
                "name": "MILLION",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 690,
                "src": "1675:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "1670:12:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 341,
            "name": "ALLOCATION_FOR_STRATEGIC_PARTNERSHIPS",
            "nodeType": "VariableDeclaration",
            "scope": 662,
            "src": "1686:76:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 337,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1686:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 340,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "3130",
                "id": 338,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1750:2:2",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "id": 339,
                "name": "MILLION",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 690,
                "src": "1755:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "1750:12:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 344,
            "name": "targetReached",
            "nodeType": "VariableDeclaration",
            "scope": 662,
            "src": "1767:33:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 342,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1767:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 343,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1795:5:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 348,
            "name": "mintingList",
            "nodeType": "VariableDeclaration",
            "scope": 662,
            "src": "1805:44:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 347,
              "keyType": {
                "id": 345,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1813:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1805:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 346,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1824:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 352,
            "name": "ICOEndDateSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 351,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 350,
                  "indexed": false,
                  "name": "_date",
                  "nodeType": "VariableDeclaration",
                  "scope": 352,
                  "src": "1874:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 349,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1874:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1873:15:2"
            },
            "src": "1854:35:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 354,
            "name": "TargetReached",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 353,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1911:2:2"
            },
            "src": "1892:22:2"
          },
          {
            "body": {
              "id": 370,
              "nodeType": "Block",
              "src": "2087:109:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 358,
                      "name": "mintingList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 348,
                      "src": "2096:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                        "typeString": "mapping(bytes32 => bool)"
                      }
                    },
                    "id": 362,
                    "indexExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 360,
                          "name": "_key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 356,
                          "src": "2120:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 359,
                        "name": "computeHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 629,
                        "src": "2108:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (string memory) pure returns (bytes32)"
                        }
                      },
                      "id": 361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2108:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2096:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 368,
                  "nodeType": "IfStatement",
                  "src": "2093:91:2",
                  "trueBody": {
                    "id": 367,
                    "nodeType": "Block",
                    "src": "2128:56:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4475706c6963617465206d696e74696e67206b657920737570706c6965642e",
                              "id": 364,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2143:33:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6b2dc297adf1f97e2a2bb3bff75e1861d3ea1f58bb590ffb2adf64cb1fa5f998",
                                "typeString": "literal_string \"Duplicate minting key supplied.\""
                              },
                              "value": "Duplicate minting key supplied."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_6b2dc297adf1f97e2a2bb3bff75e1861d3ea1f58bb590ffb2adf64cb1fa5f998",
                                "typeString": "literal_string \"Duplicate minting key supplied.\""
                              }
                            ],
                            "id": 363,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1815,
                              1816
                            ],
                            "referencedDeclaration": 1816,
                            "src": "2136:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2136:41:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 366,
                        "nodeType": "ExpressionStatement",
                        "src": "2136:41:2"
                      }
                    ]
                  }
                },
                {
                  "id": 369,
                  "nodeType": "PlaceholderStatement",
                  "src": "2190:1:2"
                }
              ]
            },
            "documentation": "@notice Checks if the minting for the supplied key was already performed.\n@param _key The key or category name of minting.",
            "id": 371,
            "name": "whenNotMinted",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 356,
                  "name": "_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 371,
                  "src": "2074:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 355,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2074:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2073:13:2"
            },
            "src": "2051:145:2",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 391,
              "nodeType": "Block",
              "src": "2389:108:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2403:14:2",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 379,
                          "name": "targetReached",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 344,
                          "src": "2404:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4163636573732069732064656e6965642e",
                        "id": 381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2419:19:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_11c0ab04dd8767b2a12ae9a3907ed0ff3885e735e22396731fac2129e6c9554f",
                          "typeString": "literal_string \"Access is denied.\""
                        },
                        "value": "Access is denied."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_11c0ab04dd8767b2a12ae9a3907ed0ff3885e735e22396731fac2129e6c9554f",
                          "typeString": "literal_string \"Access is denied.\""
                        }
                      ],
                      "id": 378,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1813,
                        1814
                      ],
                      "referencedDeclaration": 1814,
                      "src": "2395:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2395:44:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 383,
                  "nodeType": "ExpressionStatement",
                  "src": "2395:44:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 384,
                      "name": "targetReached",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 344,
                      "src": "2445:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2461:4:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2445:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 387,
                  "nodeType": "ExpressionStatement",
                  "src": "2445:20:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 388,
                      "name": "TargetReached",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 354,
                      "src": "2477:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2477:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 390,
                  "nodeType": "EmitStatement",
                  "src": "2472:20:2"
                }
              ]
            },
            "documentation": "@notice This function signifies that the minimum fundraising target was met.\nPlease note that this can only be called once.",
            "id": 392,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 374,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 373,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 28,
                  "src": "2365:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2365:9:2"
              }
            ],
            "name": "setSuccess",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 372,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2353:2:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 377,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 376,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 392,
                  "src": "2383:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 375,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2383:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2382:6:2"
            },
            "scope": 662,
            "src": "2334:163:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 425,
              "nodeType": "Block",
              "src": "2768:219:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 402,
                          "name": "icoEndDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 311,
                          "src": "2782:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2796:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2782:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652049434f20656e6420646174652077617320616c7265616479207365742e",
                        "id": 405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2799:35:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d925e4eb52463912b0564a931e020b383b0b958e0a95b25097ab9fea3197dd12",
                          "typeString": "literal_string \"The ICO end date was already set.\""
                        },
                        "value": "The ICO end date was already set."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d925e4eb52463912b0564a931e020b383b0b958e0a95b25097ab9fea3197dd12",
                          "typeString": "literal_string \"The ICO end date was already set.\""
                        }
                      ],
                      "id": 401,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1813,
                        1814
                      ],
                      "referencedDeclaration": 1814,
                      "src": "2774:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2774:61:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 407,
                  "nodeType": "ExpressionStatement",
                  "src": "2774:61:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 409,
                          "name": "_date",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 394,
                          "src": "2849:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 410,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1812,
                          "src": "2857:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2849:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652049434f20656e642064617465206d75737420626520696e20746865206675747572652e",
                        "id": 412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2862:41:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0ef38138bf52db838762be170a1f6c0a62e46ff005e0546c9de28478001a24de",
                          "typeString": "literal_string \"The ICO end date must be in the future.\""
                        },
                        "value": "The ICO end date must be in the future."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0ef38138bf52db838762be170a1f6c0a62e46ff005e0546c9de28478001a24de",
                          "typeString": "literal_string \"The ICO end date must be in the future.\""
                        }
                      ],
                      "id": 408,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1813,
                        1814
                      ],
                      "referencedDeclaration": 1814,
                      "src": "2841:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2841:63:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 414,
                  "nodeType": "ExpressionStatement",
                  "src": "2841:63:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 415,
                      "name": "icoEndDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 311,
                      "src": "2911:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 416,
                      "name": "_date",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 394,
                      "src": "2924:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2911:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 418,
                  "nodeType": "ExpressionStatement",
                  "src": "2911:18:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 420,
                        "name": "_date",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 394,
                        "src": "2959:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 419,
                      "name": "ICOEndDateSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 352,
                      "src": "2945:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2945:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 422,
                  "nodeType": "EmitStatement",
                  "src": "2940:25:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2978:4:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 400,
                  "id": 424,
                  "nodeType": "Return",
                  "src": "2971:11:2"
                }
              ]
            },
            "documentation": "@notice This function enables the whitelisted application (internal application) to set the \n ICO end date and can only be used once.\n@param _date The date to set as the ICO end date.",
            "id": 426,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 397,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 396,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 28,
                  "src": "2744:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2744:9:2"
              }
            ],
            "name": "setICOEndDate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 394,
                  "name": "_date",
                  "nodeType": "VariableDeclaration",
                  "scope": 426,
                  "src": "2723:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 393,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2723:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2722:12:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 399,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 426,
                  "src": "2762:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 398,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2762:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2761:6:2"
            },
            "scope": 662,
            "src": "2700:287:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 445,
              "nodeType": "Block",
              "src": "3253:203:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 434,
                        "name": "targetReached",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 344,
                        "src": "3267:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f7272792c20796f752063616e2774206d696e7420617420746869732074696d6520626563617573652074686520746172676574206861736e2774206265656e2072656163686564207965742e",
                        "id": 435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3282:80:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e52eda7628a73ebd1b97558619a74ccfca964dae647fc1e6727dfec86364a29a",
                          "typeString": "literal_string \"Sorry, you can't mint at this time because the target hasn't been reached yet.\""
                        },
                        "value": "Sorry, you can't mint at this time because the target hasn't been reached yet."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e52eda7628a73ebd1b97558619a74ccfca964dae647fc1e6727dfec86364a29a",
                          "typeString": "literal_string \"Sorry, you can't mint at this time because the target hasn't been reached yet.\""
                        }
                      ],
                      "id": 433,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1813,
                        1814
                      ],
                      "referencedDeclaration": 1814,
                      "src": "3259:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3259:104:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 437,
                  "nodeType": "ExpressionStatement",
                  "src": "3259:104:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "636f6d6d756e69747952657761726473",
                        "id": 439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3386:18:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ed06113fb92c703094a15391c001fd5f947fe7d327395303ffa4a9a09510e0f",
                          "typeString": "literal_string \"communityRewards\""
                        },
                        "value": "communityRewards"
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 440,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1810,
                          "src": "3406:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3406:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 442,
                        "name": "ALLOCATION_FOR_COMMUNITY_REWARDS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 316,
                        "src": "3418:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2ed06113fb92c703094a15391c001fd5f947fe7d327395303ffa4a9a09510e0f",
                          "typeString": "literal_string \"communityRewards\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 438,
                      "name": "mintOnce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 661,
                      "src": "3377:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (string memory,address,uint256) returns (bool)"
                      }
                    },
                    "id": 443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3377:74:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 432,
                  "id": 444,
                  "nodeType": "Return",
                  "src": "3370:81:2"
                }
              ]
            },
            "documentation": "@notice Mints the below-mentioned amount of tokens allocated to rewarding the community.",
            "id": 446,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 429,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 428,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 28,
                  "src": "3229:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3229:9:2"
              }
            ],
            "name": "mintCommunityRewardTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 427,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3217:2:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 431,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 446,
                  "src": "3247:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 430,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3247:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3246:6:2"
            },
            "scope": 662,
            "src": "3183:273:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 482,
              "nodeType": "Block",
              "src": "3699:400:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 454,
                        "name": "targetReached",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 344,
                        "src": "3713:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f7272792c20796f752063616e2774206d696e7420617420746869732074696d6520626563617573652074686520746172676574206861736e2774206265656e2072656163686564207965742e",
                        "id": 455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3728:80:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e52eda7628a73ebd1b97558619a74ccfca964dae647fc1e6727dfec86364a29a",
                          "typeString": "literal_string \"Sorry, you can't mint at this time because the target hasn't been reached yet.\""
                        },
                        "value": "Sorry, you can't mint at this time because the target hasn't been reached yet."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e52eda7628a73ebd1b97558619a74ccfca964dae647fc1e6727dfec86364a29a",
                          "typeString": "literal_string \"Sorry, you can't mint at this time because the target hasn't been reached yet.\""
                        }
                      ],
                      "id": 453,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1813,
                        1814
                      ],
                      "referencedDeclaration": 1814,
                      "src": "3705:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3705:104:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 457,
                  "nodeType": "ExpressionStatement",
                  "src": "3705:104:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 459,
                          "name": "icoEndDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 311,
                          "src": "3823:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3837:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3823:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f75206e65656420746f2073706563696679207468652049434f20656e642064617465206265666f7265206d696e74696e672074686520746f6b656e732e",
                        "id": 462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3840:65:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ccedbab8ae1f92030914af901b345ceaf7187b9699858c1369a74d4e740ae3ac",
                          "typeString": "literal_string \"You need to specify the ICO end date before minting the tokens.\""
                        },
                        "value": "You need to specify the ICO end date before minting the tokens."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ccedbab8ae1f92030914af901b345ceaf7187b9699858c1369a74d4e740ae3ac",
                          "typeString": "literal_string \"You need to specify the ICO end date before minting the tokens.\""
                        }
                      ],
                      "id": 458,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1813,
                        1814
                      ],
                      "referencedDeclaration": 1814,
                      "src": "3815:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3815:91:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 464,
                  "nodeType": "ExpressionStatement",
                  "src": "3815:91:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 466,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1812,
                          "src": "3920:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 469,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 467,
                                "name": "icoEndDate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 311,
                                "src": "3927:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "353438",
                                "id": 468,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3940:8:2",
                                "subdenomination": "days",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_47347200_by_1",
                                  "typeString": "int_const 47347200"
                                },
                                "value": "548"
                              },
                              "src": "3927:21:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 470,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "3926:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3920:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4163636573732069732064656e6965642c206974277320746f6f206561726c7920746f206d696e7420746865207265736572766520746f6b656e732e",
                        "id": 472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3951:62:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_07147f853b40cf0a30f6fb18b673e4e9e98e7095cd3944ec8a664b59352faea0",
                          "typeString": "literal_string \"Access is denied, it's too early to mint the reserve tokens.\""
                        },
                        "value": "Access is denied, it's too early to mint the reserve tokens."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_07147f853b40cf0a30f6fb18b673e4e9e98e7095cd3944ec8a664b59352faea0",
                          "typeString": "literal_string \"Access is denied, it's too early to mint the reserve tokens.\""
                        }
                      ],
                      "id": 465,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1813,
                        1814
                      ],
                      "referencedDeclaration": 1814,
                      "src": "3912:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3912:102:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 474,
                  "nodeType": "ExpressionStatement",
                  "src": "3912:102:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "6f7065726174696f6e616c52657365727665",
                        "id": 476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4037:20:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a7beff801e5b262513119eb0fd45d42774c16f2cfb679ded94853bc6daf9360",
                          "typeString": "literal_string \"operationalReserve\""
                        },
                        "value": "operationalReserve"
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 477,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1810,
                          "src": "4059:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4059:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 479,
                        "name": "ALLOCATION_FOR_RESERVE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 321,
                        "src": "4071:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_6a7beff801e5b262513119eb0fd45d42774c16f2cfb679ded94853bc6daf9360",
                          "typeString": "literal_string \"operationalReserve\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 475,
                      "name": "mintOnce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 661,
                      "src": "4028:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (string memory,address,uint256) returns (bool)"
                      }
                    },
                    "id": 480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4028:66:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 452,
                  "id": 481,
                  "nodeType": "Return",
                  "src": "4021:73:2"
                }
              ]
            },
            "documentation": "@notice Mints the below-mentioned amount of tokens allocated to the operational reserves.",
            "id": 483,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 449,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 448,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 28,
                  "src": "3675:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3675:9:2"
              }
            ],
            "name": "mintReserveTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 447,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3663:2:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 452,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 451,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 483,
                  "src": "3693:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 450,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3693:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3692:6:2"
            },
            "scope": 662,
            "src": "3637:462:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 519,
              "nodeType": "Block",
              "src": "4337:376:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 491,
                        "name": "targetReached",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 344,
                        "src": "4351:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f7272792c20796f752063616e2774206d696e7420617420746869732074696d6520626563617573652074686520746172676574206861736e2774206265656e2072656163686564207965742e",
                        "id": 492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4366:80:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e52eda7628a73ebd1b97558619a74ccfca964dae647fc1e6727dfec86364a29a",
                          "typeString": "literal_string \"Sorry, you can't mint at this time because the target hasn't been reached yet.\""
                        },
                        "value": "Sorry, you can't mint at this time because the target hasn't been reached yet."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e52eda7628a73ebd1b97558619a74ccfca964dae647fc1e6727dfec86364a29a",
                          "typeString": "literal_string \"Sorry, you can't mint at this time because the target hasn't been reached yet.\""
                        }
                      ],
                      "id": 490,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1813,
                        1814
                      ],
                      "referencedDeclaration": 1814,
                      "src": "4343:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4343:104:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 494,
                  "nodeType": "ExpressionStatement",
                  "src": "4343:104:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 496,
                          "name": "icoEndDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 311,
                          "src": "4461:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4475:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4461:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f75206e65656420746f2073706563696679207468652049434f20656e642064617465206265666f7265206d696e74696e672074686520746f6b656e732e",
                        "id": 499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4478:65:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ccedbab8ae1f92030914af901b345ceaf7187b9699858c1369a74d4e740ae3ac",
                          "typeString": "literal_string \"You need to specify the ICO end date before minting the tokens.\""
                        },
                        "value": "You need to specify the ICO end date before minting the tokens."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ccedbab8ae1f92030914af901b345ceaf7187b9699858c1369a74d4e740ae3ac",
                          "typeString": "literal_string \"You need to specify the ICO end date before minting the tokens.\""
                        }
                      ],
                      "id": 495,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1813,
                        1814
                      ],
                      "referencedDeclaration": 1814,
                      "src": "4453:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4453:91:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 501,
                  "nodeType": "ExpressionStatement",
                  "src": "4453:91:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 503,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1812,
                          "src": "4558:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 506,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 504,
                                "name": "icoEndDate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 311,
                                "src": "4565:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "373330",
                                "id": 505,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4578:8:2",
                                "subdenomination": "days",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_63072000_by_1",
                                  "typeString": "int_const 63072000"
                                },
                                "value": "730"
                              },
                              "src": "4565:21:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 507,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4564:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4558:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4163636573732069732064656e6965642c206974277320746f6f206561726c7920746f206d696e74207465616d20746f6b656e732e",
                        "id": 509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4589:55:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ddb842bf1fc57e02f42408adc42f28baad9b48ad85fa207276f4e7dea68536b",
                          "typeString": "literal_string \"Access is denied, it's too early to mint team tokens.\""
                        },
                        "value": "Access is denied, it's too early to mint team tokens."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8ddb842bf1fc57e02f42408adc42f28baad9b48ad85fa207276f4e7dea68536b",
                          "typeString": "literal_string \"Access is denied, it's too early to mint team tokens.\""
                        }
                      ],
                      "id": 502,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1813,
                        1814
                      ],
                      "referencedDeclaration": 1814,
                      "src": "4550:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4550:95:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 511,
                  "nodeType": "ExpressionStatement",
                  "src": "4550:95:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "7465616d",
                        "id": 513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4668:6:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e1dfd0dbf63767a45b3f20993b337a1eef2b19b117cd799475c77d789e43b92d",
                          "typeString": "literal_string \"team\""
                        },
                        "value": "team"
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 514,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1810,
                          "src": "4676:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4676:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 516,
                        "name": "ALLOCATION_FOR_TEAM",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 326,
                        "src": "4688:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e1dfd0dbf63767a45b3f20993b337a1eef2b19b117cd799475c77d789e43b92d",
                          "typeString": "literal_string \"team\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 512,
                      "name": "mintOnce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 661,
                      "src": "4659:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (string memory,address,uint256) returns (bool)"
                      }
                    },
                    "id": 517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4659:49:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 489,
                  "id": 518,
                  "nodeType": "Return",
                  "src": "4652:56:2"
                }
              ]
            },
            "documentation": "@notice Mints the below-mentioned amount of tokens allocated to the Accept.io founders.",
            "id": 520,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 486,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 485,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 28,
                  "src": "4313:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4313:9:2"
              }
            ],
            "name": "mintTokensForTeam",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 484,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4301:2:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 489,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 488,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 520,
                  "src": "4331:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 487,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4331:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4330:6:2"
            },
            "scope": 662,
            "src": "4275:438:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 556,
              "nodeType": "Block",
              "src": "4955:388:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 528,
                        "name": "targetReached",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 344,
                        "src": "4969:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f7272792c20796f752063616e2774206d696e7420617420746869732074696d6520626563617573652074686520746172676574206861736e2774206265656e2072656163686564207965742e",
                        "id": 529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4984:80:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e52eda7628a73ebd1b97558619a74ccfca964dae647fc1e6727dfec86364a29a",
                          "typeString": "literal_string \"Sorry, you can't mint at this time because the target hasn't been reached yet.\""
                        },
                        "value": "Sorry, you can't mint at this time because the target hasn't been reached yet."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e52eda7628a73ebd1b97558619a74ccfca964dae647fc1e6727dfec86364a29a",
                          "typeString": "literal_string \"Sorry, you can't mint at this time because the target hasn't been reached yet.\""
                        }
                      ],
                      "id": 527,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1813,
                        1814
                      ],
                      "referencedDeclaration": 1814,
                      "src": "4961:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4961:104:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 531,
                  "nodeType": "ExpressionStatement",
                  "src": "4961:104:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 533,
                          "name": "icoEndDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 311,
                          "src": "5079:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5093:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5079:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f75206e65656420746f2073706563696679207468652049434f20656e642064617465206265666f7265206d696e74696e672074686520746f6b656e732e",
                        "id": 536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5096:65:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ccedbab8ae1f92030914af901b345ceaf7187b9699858c1369a74d4e740ae3ac",
                          "typeString": "literal_string \"You need to specify the ICO end date before minting the tokens.\""
                        },
                        "value": "You need to specify the ICO end date before minting the tokens."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ccedbab8ae1f92030914af901b345ceaf7187b9699858c1369a74d4e740ae3ac",
                          "typeString": "literal_string \"You need to specify the ICO end date before minting the tokens.\""
                        }
                      ],
                      "id": 532,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1813,
                        1814
                      ],
                      "referencedDeclaration": 1814,
                      "src": "5071:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5071:91:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 538,
                  "nodeType": "ExpressionStatement",
                  "src": "5071:91:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 540,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1812,
                          "src": "5176:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 543,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 541,
                                "name": "icoEndDate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 311,
                                "src": "5183:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "333635",
                                "id": 542,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5196:8:2",
                                "subdenomination": "days",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_31536000_by_1",
                                  "typeString": "int_const 31536000"
                                },
                                "value": "365"
                              },
                              "src": "5183:21:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 544,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5182:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5176:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4163636573732069732064656e6965642c206974277320746f6f206561726c7920746f206d696e742061647669736f727920746f6b656e732e",
                        "id": 546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5207:59:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_140daa579ef5cb8fcfbcf4e424d65315e339c51df6643aa00f7282c7a03500e8",
                          "typeString": "literal_string \"Access is denied, it's too early to mint advisory tokens.\""
                        },
                        "value": "Access is denied, it's too early to mint advisory tokens."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_140daa579ef5cb8fcfbcf4e424d65315e339c51df6643aa00f7282c7a03500e8",
                          "typeString": "literal_string \"Access is denied, it's too early to mint advisory tokens.\""
                        }
                      ],
                      "id": 539,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1813,
                        1814
                      ],
                      "referencedDeclaration": 1814,
                      "src": "5168:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5168:99:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 548,
                  "nodeType": "ExpressionStatement",
                  "src": "5168:99:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "61647669736f7273",
                        "id": 550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5290:10:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_55dd4831c641a357bde804ce3776fc6c25300fb5dc40326f45eca70072e7f407",
                          "typeString": "literal_string \"advisors\""
                        },
                        "value": "advisors"
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 551,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1810,
                          "src": "5302:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5302:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 553,
                        "name": "ALLOCATION_FOR_ADVISORS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 331,
                        "src": "5314:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_55dd4831c641a357bde804ce3776fc6c25300fb5dc40326f45eca70072e7f407",
                          "typeString": "literal_string \"advisors\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 549,
                      "name": "mintOnce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 661,
                      "src": "5281:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (string memory,address,uint256) returns (bool)"
                      }
                    },
                    "id": 554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5281:57:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 526,
                  "id": 555,
                  "nodeType": "Return",
                  "src": "5274:64:2"
                }
              ]
            },
            "documentation": "@notice Mints the below-mentioned amount of tokens allocated to the Accept.io advisors.",
            "id": 557,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 523,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 522,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 28,
                  "src": "4931:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4931:9:2"
              }
            ],
            "name": "mintTokensForAdvisors",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 521,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4919:2:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 525,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 557,
                  "src": "4949:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 524,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4949:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4948:6:2"
            },
            "scope": 662,
            "src": "4889:454:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 576,
              "nodeType": "Block",
              "src": "5644:224:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 565,
                        "name": "targetReached",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 344,
                        "src": "5658:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f7272792c20796f752063616e2774206d696e7420617420746869732074696d6520626563617573652074686520746172676574206861736e2774206265656e2072656163686564207965742e",
                        "id": 566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5673:80:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e52eda7628a73ebd1b97558619a74ccfca964dae647fc1e6727dfec86364a29a",
                          "typeString": "literal_string \"Sorry, you can't mint at this time because the target hasn't been reached yet.\""
                        },
                        "value": "Sorry, you can't mint at this time because the target hasn't been reached yet."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e52eda7628a73ebd1b97558619a74ccfca964dae647fc1e6727dfec86364a29a",
                          "typeString": "literal_string \"Sorry, you can't mint at this time because the target hasn't been reached yet.\""
                        }
                      ],
                      "id": 564,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1813,
                        1814
                      ],
                      "referencedDeclaration": 1814,
                      "src": "5650:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5650:104:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 568,
                  "nodeType": "ExpressionStatement",
                  "src": "5650:104:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "696e697469616c537472617465676963506172746e657273",
                        "id": 570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5777:26:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8005d96712946b46f9596742639235ac7800f72805061cf3a22e544d1605e5a4",
                          "typeString": "literal_string \"initialStrategicPartners\""
                        },
                        "value": "initialStrategicPartners"
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 571,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1810,
                          "src": "5805:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5805:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 573,
                        "name": "ALLOCATION_FOR_INITIAL_STRATEGIC_PARTNERSHIPS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 336,
                        "src": "5817:45:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8005d96712946b46f9596742639235ac7800f72805061cf3a22e544d1605e5a4",
                          "typeString": "literal_string \"initialStrategicPartners\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 569,
                      "name": "mintOnce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 661,
                      "src": "5768:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (string memory,address,uint256) returns (bool)"
                      }
                    },
                    "id": 574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5768:95:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 563,
                  "id": 575,
                  "nodeType": "Return",
                  "src": "5761:102:2"
                }
              ]
            },
            "documentation": "@notice Mints the below-mentioned amount of tokens allocated to the first Strategic Partnership category.",
            "id": 577,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 560,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 559,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 28,
                  "src": "5620:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5620:9:2"
              }
            ],
            "name": "mintTokensForInitialStrategicPartnerships",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 558,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5608:2:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 563,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 562,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 577,
                  "src": "5638:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 561,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5638:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5637:6:2"
            },
            "scope": 662,
            "src": "5558:310:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 613,
              "nodeType": "Block",
              "src": "6161:418:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 585,
                        "name": "targetReached",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 344,
                        "src": "6175:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f7272792c20796f752063616e2774206d696e7420617420746869732074696d6520626563617573652074686520746172676574206861736e2774206265656e2072656163686564207965742e",
                        "id": 586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6190:80:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e52eda7628a73ebd1b97558619a74ccfca964dae647fc1e6727dfec86364a29a",
                          "typeString": "literal_string \"Sorry, you can't mint at this time because the target hasn't been reached yet.\""
                        },
                        "value": "Sorry, you can't mint at this time because the target hasn't been reached yet."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e52eda7628a73ebd1b97558619a74ccfca964dae647fc1e6727dfec86364a29a",
                          "typeString": "literal_string \"Sorry, you can't mint at this time because the target hasn't been reached yet.\""
                        }
                      ],
                      "id": 584,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1813,
                        1814
                      ],
                      "referencedDeclaration": 1814,
                      "src": "6167:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6167:104:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 588,
                  "nodeType": "ExpressionStatement",
                  "src": "6167:104:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 590,
                          "name": "icoEndDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 311,
                          "src": "6285:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6299:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6285:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f75206e65656420746f2073706563696679207468652049434f20656e642064617465206265666f7265206d696e74696e672074686520746f6b656e732e",
                        "id": 593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6302:65:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ccedbab8ae1f92030914af901b345ceaf7187b9699858c1369a74d4e740ae3ac",
                          "typeString": "literal_string \"You need to specify the ICO end date before minting the tokens.\""
                        },
                        "value": "You need to specify the ICO end date before minting the tokens."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ccedbab8ae1f92030914af901b345ceaf7187b9699858c1369a74d4e740ae3ac",
                          "typeString": "literal_string \"You need to specify the ICO end date before minting the tokens.\""
                        }
                      ],
                      "id": 589,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1813,
                        1814
                      ],
                      "referencedDeclaration": 1814,
                      "src": "6277:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6277:91:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 595,
                  "nodeType": "ExpressionStatement",
                  "src": "6277:91:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 597,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1812,
                          "src": "6382:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 600,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 598,
                                "name": "icoEndDate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 311,
                                "src": "6389:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "373330",
                                "id": 599,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6402:8:2",
                                "subdenomination": "days",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_63072000_by_1",
                                  "typeString": "int_const 63072000"
                                },
                                "value": "730"
                              },
                              "src": "6389:21:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 601,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6388:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6382:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4163636573732069732064656e6965642c206974277320746f6f206561726c7920746f206d696e742074686520706172746e65727368697020746f6b656e732e",
                        "id": 603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6413:66:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_318786f5296cbfa358305845cf37730cc559f1e75e841aa03ad09ffbc8ef339c",
                          "typeString": "literal_string \"Access is denied, it's too early to mint the partnership tokens.\""
                        },
                        "value": "Access is denied, it's too early to mint the partnership tokens."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_318786f5296cbfa358305845cf37730cc559f1e75e841aa03ad09ffbc8ef339c",
                          "typeString": "literal_string \"Access is denied, it's too early to mint the partnership tokens.\""
                        }
                      ],
                      "id": 596,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1813,
                        1814
                      ],
                      "referencedDeclaration": 1814,
                      "src": "6374:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6374:106:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 605,
                  "nodeType": "ExpressionStatement",
                  "src": "6374:106:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "737472617465676963506172746e657273",
                        "id": 607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6503:19:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1c1c5562d45e83d7ae712234df90774f358336d0437b5c67c74e06aef6d330d1",
                          "typeString": "literal_string \"strategicPartners\""
                        },
                        "value": "strategicPartners"
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 608,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1810,
                          "src": "6524:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6524:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 610,
                        "name": "ALLOCATION_FOR_STRATEGIC_PARTNERSHIPS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "6536:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1c1c5562d45e83d7ae712234df90774f358336d0437b5c67c74e06aef6d330d1",
                          "typeString": "literal_string \"strategicPartners\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 606,
                      "name": "mintOnce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 661,
                      "src": "6494:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (string memory,address,uint256) returns (bool)"
                      }
                    },
                    "id": 611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6494:80:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 583,
                  "id": 612,
                  "nodeType": "Return",
                  "src": "6487:87:2"
                }
              ]
            },
            "documentation": "@notice Mints the below-mentioned amount of tokens allocated to the second Strategic Partnership category.",
            "id": 614,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 580,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 579,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 28,
                  "src": "6137:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6137:9:2"
              }
            ],
            "name": "mintTokensForStrategicPartnerships",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 578,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6125:2:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 583,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 582,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 614,
                  "src": "6155:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 581,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6155:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6154:6:2"
            },
            "scope": 662,
            "src": "6082:497:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 628,
              "nodeType": "Block",
              "src": "6763:51:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 624,
                            "name": "_key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 616,
                            "src": "6803:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 622,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1797,
                            "src": "6786:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "6786:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6786:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 621,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1804,
                      "src": "6776:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                        "typeString": "function () pure returns (bytes32)"
                      }
                    },
                    "id": 626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6776:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 620,
                  "id": 627,
                  "nodeType": "Return",
                  "src": "6769:40:2"
                }
              ]
            },
            "documentation": "@notice Computes keccak256 hash of the supplied value.\n@param _key The string value to compute hash from.",
            "id": 629,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "computeHash",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 616,
                  "name": "_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 629,
                  "src": "6720:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 615,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6720:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6719:13:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 620,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 619,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 629,
                  "src": "6754:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 618,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6754:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6753:9:2"
            },
            "scope": 662,
            "src": "6699:115:2",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 660,
              "nodeType": "Block",
              "src": "7202:95:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 646,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 633,
                        "src": "7219:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 647,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 635,
                        "src": "7224:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 645,
                      "name": "mintTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1088,
                      "src": "7208:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7208:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 649,
                  "nodeType": "ExpressionStatement",
                  "src": "7208:24:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 650,
                        "name": "mintingList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 348,
                        "src": "7238:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 654,
                      "indexExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 652,
                            "name": "_key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 631,
                            "src": "7262:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 651,
                          "name": "computeHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 629,
                          "src": "7250:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (string memory) pure returns (bytes32)"
                          }
                        },
                        "id": 653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7250:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7238:30:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7271:4:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "7238:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 657,
                  "nodeType": "ExpressionStatement",
                  "src": "7238:37:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7288:4:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 644,
                  "id": 659,
                  "nodeType": "Return",
                  "src": "7281:11:2"
                }
              ]
            },
            "documentation": "@notice Mints the tokens only once against the supplied key (category).\n@param _key The key or the category of the allocation to mint the tokens for.\n@param _to The address receiving the minted tokens.\n@param _amount The amount of tokens to mint.",
            "id": 661,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 638,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 637,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 264,
                  "src": "7154:13:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7154:13:2"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 640,
                    "name": "_key",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 631,
                    "src": "7182:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 641,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 639,
                  "name": "whenNotMinted",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 371,
                  "src": "7168:13:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_string_memory_ptr_$",
                    "typeString": "modifier (string memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7168:19:2"
              }
            ],
            "name": "mintOnce",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 636,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 631,
                  "name": "_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 661,
                  "src": "7103:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 630,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7103:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 633,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 661,
                  "src": "7116:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 632,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7116:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 635,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 661,
                  "src": "7129:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 634,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7129:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7102:43:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 644,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 643,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 661,
                  "src": "7196:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 642,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7196:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7195:6:2"
            },
            "scope": 662,
            "src": "7085:212:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          }
        ],
        "scope": 663,
        "src": "1172:6127:2"
      }
    ],
    "src": "585:6714:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-11-11T17:01:16.412Z"
}